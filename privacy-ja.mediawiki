ビットコインはプライバシーを強力に保護できる一方で、実際の多くの利用方法はプライバシーに優れているとは言えない。この技術を適切に理解することによって、ビットコインは、真にプライバシーを保護し、匿名で利用することが可能になる。

2019年時点で、一般的なビットコインの支持者は、ビットコインが完全に追跡可能であると信じているようであるが、それは完全に間違っている。2011年頃には、ほとんどの一般的な支持者は完全にプライバシーを保護していると考えていたが、これもまた間違っている。これは微妙な問題であり、ある状況下ではビットコインはプライバシーを保護できる。しかし、これは簡単に理解できるものではなく、学習と忍耐が必要である。

この記事は2019年の2月に書かれたものである。

=== 概要 ===

この記事の残りを読む時間を節約するために、ここに一般的なビットコインのユーザーがプライバシーを改善することができる方法の簡単な要約を載せておく。

* あなたが何から隠れようとしているのか、あなたの脅威モデルが何か、あなたの敵はどのようなものかを考えよ。[[transaction surveillance company|トランザクション追跡企業]]は実在し、実際に大規模なビットコインエコシステムの監視を行っているということに留意せよ。
* [[Address reuse|アドレスの再利用]]はすべきではない。アドレスは資金を受け取る単一の相手にのみ公開すべきであり、一度そのアドレスから資金を消費した後は二度と使うべきではない。
* 取引を行う時、相手に与えるあなたの情報は最小限にしなければならない。例えば、AML/KYCのチェックは忌避し、実生活でのメールアドレスを見せる場合にも注意しなければならない。
* あなた自身の[[full node|フルノード]]か[[client-side block filtering|クライアントサイドブロックフィルター]]を利用するウォレットを利用せよ。ウェブウォレットを利用してはならない。
* オンチェーントランザクションは[[Tor]]を通じてブロードキャストせよ。もしもウォレットがTorをサポートしていないのであれば、Torブラウザを使ってtxのhexデータをウェブフォームからブロードキャストせよ。
* [[Lightning Network]]を可能な限り利用せよ。
* もしもライトニングネットワークが利用できないのであれば、[[CoinJoin]]を適切に実装したウォレットを利用せよ。
* お釣りアドレスを作ることをなるべき避けよ。例えば、ライトニングネットワークに資金を入れるとき、UTXO全体を利用し、お釣りが出ないようにせよ(ただしBTCの量が危険なほど多いときは除く)。
* もしも[[#Digital forensics|デジタル・フォレンジクス]]が心配ならば、[https://tails.boum.org/ Tails Operating System]のようなツールを利用せよ。

== はじめに ==

ユーザはビットコインを利用するとき、様々な経路から匿名性を毀損し、情報を漏洩させうる[[software|ソフトウェア]]を利用する。

ビットコインは[[transactions|トランザクション]]を全員から見ることができる[[block chai|ブロックチェーン]]に記録することによって、プライバシーを毀損する。ビットコインは[[address|アドレス]]の間を移動する。送信者・受信者のアドレスを両方見ることができ、送金された量も見ることができる。それぞれのアドレスの所有者は不明である(図1)。

トランザクションから分かるアドレス間のつながりはトランザクショングラフと呼ばれる。アドレスやトランザクションIDはただのランダムな数字であるから、この情報だけでは誰も特定することはできない。しかし、もしも過去・未来のうちのアドレスの一つでも実際の所有者と結びつけることができるならば、その時点から他のアドレスの所有者についてもたどることが可能になる。このアドレスの特定作業はネットワーク分析、監視、ウェブ検索や、その他の様々な手段で行われうる。推奨されている「アドレスの再利用禁止」の習慣は、この攻撃をより困難にさせることを目的としている。

[[File:Unknownaddress.png|thumb|ビットコインの流れはすべて公開されている]]

=== 例 - 攻撃者がコインの出発元と行き先をコントロールしている場合 ===

[[File:Knownaddress.png|thumb|１つのアドレスの所有者を見つけることで、取引の匿名性を攻撃できる]]

２つめの画像は簡単な例を示している。攻撃者は両替サイトとハニーポットのウェブサイトを運用して、人々を罠にかけようとしている。もしも誰かが両替サイトを使ってビットコインを購入し、罠ウェブサイトでコインを取引した場合、ブロックチェーンでは以下が観測される:

* アドレスAからアドレスBへのコインの取引。<アドレスAの署名>によって認可されている。
* アドレスBからアドレスCへのコインの取引。<アドレスBの署名>によって認可されている。

Mr. Doeの銀行口座から法定通貨が送金されてコインの購入に使われて、アドレスBに送金されたということを攻撃者が知っているとする。更に攻撃者は、アドレスBから罠ウェブサイトのアドレスCに、コインが入金されたことを知っているとする。これらを総合すると、これはアドレスBがMr. Doeに属するものであり、彼が罠ウェブサイトに送金したということを強く示唆することになる。この推定は常に正しいとは限らず、アドレスBはMr. Doeの代わりに第三者が利用したもので、Cへの取引は無関係という可能性もある。あるいは、２つの取引はスマートコントラクト([[Off-Chain Transactions|オフチェーントランザクション]]を見よ)に関わるもので、どこか無関係なブロックチェーン上の全く別のアドレスにオフチェーンで送金した可能性もある。

=== 例 - 独裁国家での非匿名な新聞の購入 ===

この例では攻撃者は送金先をコントロールしており、メタデータから送金元を発見する。

# あなたは独裁国家に住んでおり、ビットコインを利用して「本物の」新聞をインターネットで買いたいものとする。
# あなたはビットコインフォーラムに参加して、あなたのアドレスを署名として使っている。あなたはとても協力的なので、何ヶ月かの後にそれなりの寄付を集めることができた。
# 残念ながら、あなたは新聞を誰から買うのかを見定めることができず、政府機関のエージェントから買うことになってしまった。
# 政府のエージェントは新聞の購入に利用されたトランザクションをブロックチェーン上で見て、ウェブ検索によって関係するアドレスを探した。彼はあなたの署名とアドレスをビットコインフォーラムで発見した。あなたはフォーラムでの投稿に、特定されるのに十分な個人情報を残してしまっていた。あなたは「再教育キャンプ」に送られてしまった。
# このようなことが起こった最大の理由はアドレスの再利用にある。あなたのフォーラムでの署名は変化することがないたった一つのビットコインアドレスと紐付いており、ウェブ検索で見つけることが容易かった。

あなたは前方攻撃(秘密で取得したコインを、特定につながる方法で使ってしまう: 罠ウェブサイトの例)からも後方攻撃(秘密に使ったはずのコインを、実は特定につながる方法で取得してしまっていた: 新聞の例)からも自身を守らなければならない。

=== 例 - 完全にプライベートな寄付 ===

一方で、以下がビットコインを使って完全に匿名な寄付をする例である。

# 目的は、ビットコインを受け付けている何らかの機関に寄付をすることである。
# あなたは[[Bitcoin Core]]ウォレットを完全に[[Tor]]経由で動かしている。
# ビットコインのデータとは無関係な、余剰なデータを何百GBかTor経由でダウンロードして、ダウンロードに使用した通信量がビットコインのブロックチェーンのサイズと違うサイズになるようにする。
# [[Pool vs. solo mining|ソロマイニング]]でブロックを採掘し、新しくマイニングされたコインをウォレットにあなたのウォレットに送金する。
# すべての金額を、機関の寄付アドレスに送金する。
# 最後に、使用したコンピュータのハードウェアを破棄する。

あなたのフルノードウォレットはTor経由で稼働しているため、あなたのIPアドレスは十分に秘匿されている。コインはマイニングによって獲得されたものであるから、あなたの他の個人情報とは完全に切り離されている。このトランザクションは寄付なので、品物やサービスがあなたのもとに届けられることはなく、あなたは配送先の住所を明かす必要もない。すべての残高が送金されたので、お釣りアドレスがこの先情報を漏らすこともない。ハードウェアが破壊されているので、破棄されたハードディスクから後に情報が見つかることもない。この手法において唯一攻撃手段となりうるのは、[https://www.torproject.org/docs/faq.html.en#AttacksOnOnionRouting 世界的な攻撃者]がTor自体の脆弱性を悪用した場合だけである。

=== ブロックチェーン上トランザクションの複数の解釈 ===

ビットコインのトランザクションはインプットとアウトプットから構成されており、それらは1つであってもよいし、複数であることもある。それまでに作成されたアウトプットが、新しく作られるトランザクションのインプットとして利用できる。そのようなアウトプットは消費することで破壊され、新しいアウトプットがそれを置き換える形で通常作成されることになる。

このようなトランザクションの例を考えてみる:

 1 btc  ---->  1 btc 
 3 btc         3 btc

このトランザクションは1btcと3btcの２つのインプットを持ち、1btcと3btcの2つのアウトプットを作成する。

もしもあなたがこのようなトランザクションをブロックチェーン上で見つけたら、あなたはこのトランザクションの意味をどうやって解釈するだろうか？(例えば、我々は通常ビットコイントランザクションは支払いだと考えがちだが、支払い目的のトランザクションではなくてもよいとする)

実は、最低でも9つの解釈の可能性<ref>Bitcoin Milan Meetup 46 - Talk by Adam Gibson https://www.youtube.com/watch?v=IKSSWUBqMCM&t=2448</ref>がある:

# [https://en.wikipedia.org/wiki/Alice_and_Bob アリス]が両者のインプットを提供し、3btcを[https://en.wikipedia.org/wiki/Alice_and_Bob ボブ]に支払う。アリスは1btcのアウトプットを所有することになる。
# アリスが両者のインプットを提供し、1btcをボブに支払い、3btcをアリス自身にお釣りとして返却する。
# アリスが1btcのインプットを、ボブが3btcのインプットを提供し、アリスが1btcの、ボブが3btcのアウトプットを手に入れる。これはCoinJoinトランザクションの一種である。
# アリスが2btcをボブに支払う。アリスは3btcのインプットを提供し、1btcのアウトプットを入手する。ボブは1btcを提供し3btcを入手する。これは[[PayJoin]]タイプのトランザクションであろう。
# アリスは4btcをボブに支払うが、何らかの理由で2つのアウトプットを利用している。
# 偽のトランザクションの場合 - アリスはすべてのインプットとアウトプットを所有しているが、アリス自身のアドレス間でコインを移動しているだけである。
# アリスはボブに3btcを支払い、キャロルに1btcを支払う。これは[[Techniques_to_reduce_transaction_fees#Change_avoidance|お釣りのないバッチ支払いである]]。
# アリスが3btcを支払い、ボブが1btcを支払う。キャロルが3btcを受け取り、デイビッドが1btcを受け取る。これはCoinJoinを通じた[[Techniques_to_reduce_transaction_fees#Change_avoidance|お釣りのないバッチ支払い]]の一種である。
# アリスとボブが4btcをキャロルに支払うが、何らかの理由で2つのアウトプットを利用している。

このような単純なトランザクションであっても多くの解釈が可能である。したがって、ビットコインのトランザクションがいつでも完全に追跡可能というのは完全な誤りである。

ブロックチェーンの解析をするプライバシー関連の攻撃者は普通、近似的手法（またはウォレットソフトウェアや利用パターンの癖）に頼った分析をしており、もっともらしい何かを仮定している。解析者はその時これらの可能性のうちのいくつかを無視したり、除外したりすることになる。しかし、それらの推定というのは結局の所誤りかもしれないのである。プライバシーの改善を求める者はこれらの仮定を意図的に破壊することで、解析者を完全に欺くことができる。

ビットコインの通貨単位はトランザクションの中に「（紙幣のような）透かし」があるわけではない(言い換えれば、紙幣のようなシリアルナンバーが付いているわけでもない)。例えば、1btcのインプットというのは1btcのアウトプットにもなりうるし、3btcのアウトプットの一部として考えることもでき、あるいはその両方と言えるかもしれない。トランザクションは多対多の写像であり、非常に重要な事実として、1btcが最終的にどこに行ったのかという質問に答えるのは不可能である。この一つのトランザクション内におけるビットコインの代替可能性(ファンジビリティ)というのが、上のようなトランザクションに多くの解釈の可能性が発生する重要な理由である。

=== 脅威モデル ===

プライバシーについて考えるとき、あなたは自分が一体誰から隠れようとしているのかを考えなければならない。仮想的な攻撃者がどのようにあなたを監視するのか、どのような情報があなたにとって最も重要なのか、どんな技術を使ってプライバシーを守るのか調べる必要がある。あなたのプライバシーを守る行動の種類というのは、あなたの脅威モデルに依存することになる。

プライバシーの初学者は、ソフトウェアをダウンロードして使いさえすればプライバシーの心配は解決されると考えがちであるが、それは間違っている。プライバシーのためには多少なりとも行動パターンを変える必要がある。例えば、完全に匿名なインターネットがあったとして、コミュニケーションの相手や、話す相手も完全に秘密だという状況を考えてみる。あなたはこのツールを使ってソーシャルメディアのウェブサイトであなたの実名を書き込んだり、自撮りをアップロードしたり、今していることについて話すこともできる。インターネット上の誰でもその情報を見ることができるので、あなたのプライバシーは完全な匿名性にも関わらず崩壊することになる。

詳細についてはこの資料を読んでほしい。[https://www.slideshare.net/grugq/opsec-for-hackers Opsec for Hackers by grugq] この公演は政府からのプライバシーが必要な政治活動家を対象にしたものだが、多くの知見は私達全員に、一般的に当てはまるものである。

多くの場合、「もっともらしい否認」だけでは十分ではない。なぜなら、多くの監視手法は統計的な操作だけで十分だからである（例えばターゲット広告など）。

=== データ融合の方法 ===

[[File:Privacy-data-fusion-intersection-diagram.png|200px|thumb|right|2つの異なる情報の漏洩が、その結合によってプライバシーをさらに悪化させることを示した、データ融合の図。]]

複数の情報漏洩が結合されると、どんな一つの情報漏洩よりもプライバシーへの影響は大きくなりうる。あるトランザクションの受信者が送金者の非匿名化を試みているとする。プライバシーの情報漏洩は単体でも送金者の候補を絞り込むのに利用できるが、２つの異なる情報漏洩では異なる候補者の絞り込みに使われうるため、残る候補者はさらに少数になりうる。図を参照せよ。

[[File:Privacy-data-fusion-newspaper-buying-diagram.png|200px|thumb|right|新聞の購入者のデータ融合の例。]]

どんな小さな情報漏洩でも、他の情報漏洩と組み合わせることによってプライバシーを毀損しうるため、小さな情報漏洩であっても許容すべきではない。非匿名の独裁国家の新聞の購入者の例でいえば、非匿名化されてしまったのはトランザクション情報が見えることと、フォーラムでの署名とアドレスの組み合わせのためである。ブロックチェーン上には、取引している人の身元や習慣が不明なトランザクションは無数に存在している。また、所有者の身元や習慣を明かさないようなフォーラムの署名とアドレスも多い。なぜなら署名とアドレスは結局の所ランダムな暗号学的な情報でしかないからである。しかし、この２つの情報漏洩を組み合わせることによって再教育キャンプ送りという結末を招いてしまった。このデータ融合の手法はビットコインのプライバシー（あるいは他の状況でも）を理解するために非常に重要である。

=== なぜプライバシーが必要か ===

財産上のプライバシーというのは、ビットコインの代替可能性における不可欠な要素である。もしもあるコインと別のコインを区別することができるのであれば、代替可能性は弱いということになる。もしも実際の代替可能性が弱いということになると、非中央集権性を保つことができない。もしも有名人が「盗まれた」コインのリストを公開して、そのリストから出てきたコインを受け付けないということを宣言したとすると、リスト内のコインを確認して、受け付けられないものを拒否しなければならなくなる。そのような世界では「悪い」コインを掴まされないように、皆が多種多様な当局によって発行されたブラックリストを確認しなければならなくなる。この手間と取引のコストによってビットコインがマネーとしての価値を落としてしまうだろう。

財産上のプライバシーは自由市場における効率的な運営のためにも重要な条件である。もしもビジネスで製造元や顧客があなたの意志に反して取引をすべて監視できるのであれば、あなたは有効な価格というものを設定できない。あなたの商売敵が売上をすべて確認できる状態では、効果的にその相手と競争することができない。商取引において、自分自身の口座についてプライバシーがなければ、情報アドバンテージを失うことになる。例えば地主があなたの給与をすべて見ることができる状態では、あなたの給与が上がったのを見た地主は家賃をあげようとしてくることだろう。

財産上のプライバシーは個人的な安全のためにも重要である。もしも泥棒があなたの支出、消費、貯金を覗き見ることができたとすれば、泥棒はその情報であなたを付け狙い悪用しようとしてくるだろう。プライバシーがなければ、邪悪な集団があなたの情報を悪用し、玄関先で高価な届け物を強奪し、取引先の相手と手を組んであなたから金を巻き上げようとするかもしれない（どのくらいの金を巻き上げられるか悪人たちは知っていることになる）。

財産上のプライバシーは人間の尊厳のために不可欠である。横柄なコーヒーショップの店員や煩い隣人に、収入や購入物について知られるのは気分が悪い。子供はまだかと煩い義理の両親が「なぜ避妊薬（あるいは大人のおもちゃでもいい）なんか買っているのか」と聞いてきたら気分が悪いだろう。あなたの上司はあなたがどの教会に寄付したかについて知る必要はない。
我々の尊厳が保たれる「合法的な」取引だけが、自己検閲もなく行われるような世界ではプライバシーなど必要ないと主張するかもしれないが、それは他者を不当に迫害するような政府や警察のおらず市民全員が知的で差別など一切ないどこか遠い世界の話だろう。

そして、最も重要なことだが、財産上のプライバシーは法執行当局や透明性とは非互換なものではない。記録を取りたければいつでも記録を取れるし、命令されたときには（あるいは自主的に）記録を持っていないと自分が不利になるような機関には、今日実際行われているように情報を提供すればよいのである。その過程でも、誰にでも見れる公開された記録などというものは全く不要である。

財産において、誰にでも見れる公開された記録というものはいまだかつてあったことはない。そのような記録は望ましくないし、我慢し難いものである。ビットコインのホワイトペーパーには匿名アドレスを利用することで台帳の可視性を回避するという方法が書かれていたが、今日のビットコインエコシステムでは様々なものが適切に機能しておらず、我々はこれを改善しなければならない。ビットコインは名前やIPアドレスをトランザクションに書き込むように設計することもできたが、そのようにはなっていない。ホワイトペーパーにはプライバシーについて述べたセクションがある。ビットコインはプライバシーについて注力していないというのは誤りである。満足なプライバシーは、実世界でのデジタル通貨にとっての必須条件である<ref>https://bitcointalk[dot]org/index.php?topic=334316.msg3588908#msg3588908</ref>。

== ブロックチェーンからのプライバシーへの攻撃 ==

ビットコインはブロックチェーンを利用している。ユーザーはブロックチェーンをダウンロードすることで、その歴史においてビットコインがすべてのルールに従ってきたのか検証することができる。例えば、ユーザーは誰もビットコインを無限に発行していないことを確認できるし、すべてのコインが[[private key|秘密鍵]]から作られた[[OP_CHECKSIG|有効な署名]]によって消費されていることを確認できる。これこそ、[[Principles of Bitcoin#Low_trust|最小限の与信]]しか要求しない電子マネーとして[[Bitcoin as a medium of exchange|ビットコインのユニークな価値を提案しているものである]]。しかし、この同じブロックチェーンの構造はすべてのトランザクションが万人に公開されていなければならないというプライバシー上の問題も引き起こしている。このセクションでは攻撃者が公開ブロックチェーンを解析するときにつかうよく知られた手法を解説する。

ビットコインは[[Coin analogy|UTXO モデル]]に従っている。トランザクションは一つ以上の、時には多数のインプットとアウトプットをそれぞれ持つ。以前に作られたアウトプットがその後のトランザクションのためのインプットとして用いられることになる。未だに消費されていないアウトプットはUTXOと呼ばれる。UTXOはしばしば[[Coin analogy|「コイン」]]と呼ばれる。UTXOはビットコインのアドレスとひも付き、アドレスのscriptPubKeyと対応する有効な署名を作成することで消費が可能になる。


アドレスは暗号学的な情報であり、基本的にはランダムな数字である。アドレスはそれ自体では保有するビットコインの真の所有者についての情報はあまり漏らさない。普通攻撃者は、同一のウォレットに属する複数のアドレスをリンクさせようと試みる。そのようなアドレスの集合は「クラスター」「クロージャー」「ウォレットクラスター」などと呼ばれ、そのような集合を作成する試みは「ウォレットクラスタリング」とよばれる。一度クラスターが取得できると、攻撃者はクラスターを監視したい実世界の個人や集団の情報と関連付けようと試みる。例えばウォレットクラスターAがアリスに属し、ウォレットクラスターBがボブに属するとする。もしもビットコインのトランザクションがAからBへとコインを送金するのが観測されたら、攻撃者はアリスがボブにコインを送金したと知ることになる。

実際に正確な情報を取得するためにウォレットクラスターの近似の精度を高めるのは非常に難しいこともある。<ref>Neudecker, Till & Hartenstein, Hannes. (2018). Network Layer Aspects of Permissionless Blockchains. IEEE Communications Surveys & Tutorials. PP. 1-1. 10.1109/COMST.2018.2852480.</ref>.

=== [[Common-input-ownership heuristic|共通インプット所有推定]] ===

もしもトランザクションが一つ以上のインプットを持つならば、そのインプットは共通の利用者によって所有されているという近似、あるいは推定である。

例えば、以下のようなインプットA,B,CとアウトプットX,Yを持つトランザクションを考えてみる。

 A (1 btc) --> X (4 btc)
 B (2 btc)     Y (2 btc)
 C (3 btc)

このトランザクションはアドレスBとCがアドレスAを持つ人物と同じ人物によって所有されていると示唆する。

CoinJoinの目的の一つは、この近似を破壊することにある。それでもこの近似は普通正しいものであり、2019年の時点では広く[[transaction surveillance company|トランザクション監視会社]]や他の攻撃者によって利用されている。この近似は普通アドレス再利用と共に用いられており、さらに2018年時点でのビットコイン経済圏が中央集権化していることも合わせると、一般に考えられるよりも効果的である<ref>Harrigan, Martin & Fretter, Christoph. (2016). The Unreasonable Effectiveness of Address Clustering.</ref>。この近似の成功はウォレットの振る舞いにも依存している。例えば、もしもウォレットが普段少ない金額を受け取って大きな金額を送金していたら、インプットが複数あるトランザクションができることになる。


=== [[Change|お釣り]] アドレス検出 ===

多くのビットコインのトランザクションはお釣りアウトプットを持つ。もしもお釣りアドレスが特定されると、消費されたインプットの所有者と新しいアウトプットを紐付けてしまうので深刻な情報漏洩を引き起こす。お釣りアウトプットは他の[[common-input-ownership heuristic|共通インプット所有推定]]や[[address reuse|アドレス再利用]]といった情報漏洩と組み合わせることで非常に効果的になる。お釣りアドレス検出によって新しく作成されたアドレスと、[[common-input-ownership heuristic|共通インプット所有推定]]や[[address reuse|アドレス再利用]]といった情報漏洩でクラスタ化されたアドレスを、攻撃者が再度クラスタ化することを可能にする。

お釣りアドレスは「ピーリング・チェーン」と呼ばれる共通した利用パターンにつながる。取引所・市場・マイニングプール・給与支払いといった大きなトランザクションの後に見られるものである。ピーリング・チェーンでは、単一のアドレスが比較的大きな量のビットコインから始まる。より小さな量がその大きな量から少しずつ抜けていき、小さな量が一つのアドレスに送金され、残りが一時的なお釣りアドレスに送金されるパターンのトランザクションが見られる。この過程が何百回、何千回と繰り返され、その後大きな量のビットコインは小さくなり、残りが別のアドレスと合流して、また大きな量の単一アドレスが作られる。ここからまたピーリング・チェーンの過程が始まる。<ref>Sarah Meiklejohn, Marjori Pomarole, Grant Jordan, Kirill Levchenko, Damon McCoy, Geoffrey M. Voelker, and Stefan Savage. 2013. A fistful of bitcoins: characterizing payments among men with no names. In Proceedings of the 2013 conference on Internet measurement conference (IMC '13). ACM, New York, NY, USA, 127-140. DOI: https://doi.org/10.1145/2504730.2504747 https://cseweb.ucsd.edu/~smeiklejohn/files/imc13.pdf</ref>.

以下がお釣りアドレスをトランザクションのアウトプットの中から検出するいくつかの方法である。

==== アドレス再利用 ====

アウトプットアドレスが再利用されたのであれば、そのアウトプットはおそらくお釣りアドレスではないことになる。なぜなら、お釣りアドレスはウォレットソフトウェアによって自動的に作成されるが、支払いアドレスは人間同士の間で手動でやり取りされるからである。アドレス再利用は人間のユーザーの無知あるいは無関心から起こる。意図的にウォレットを設計しない限り、偽陽性が現れにくいということから、この近似はおそらく最も正しいものである。この近似はまた「シャドー近似」とも呼ばれる。

2010-2011年の[[Deterministic wallet]]が無かった時代の非常に古いソフトウェアでは、新しいアドレスをお釣りとして使っておらず、お釣りをインプットのアドレスに送金していた。これによってこのタイプのお釣りアドレスは確実に検出される。

アドレス再利用を防ぐことが明らかに解決策となりうる。別の案として、ウォレットが自動的に支払いアドレスが以前に使われたことを（ユーザーに尋ねるなどして）検出して、再利用されたアドレスをお釣りアドレスとして使うということも考える。このようにすれば、両方のアウトプットが再利用アドレスになる。

==== ウォレット指紋 ====

ウォレットソフトウェアいつも同じようにトランザクションを作るわけではないため、注意深い解析者は特定のトランザクションをどのようなソフトウェアが作成したのか推論することもできる。ウォレット指紋は、同一のウォレット指紋によって消費されるお釣りのアウトプットを検出するのに使われる。

例えば、５つの典型的なトランザクションであって、インプット1つとアウトプット2つを持つようなものを考える。A-Eはトランザクションであり、A1,A2などがそれらのトランザクションのアウトプットアドレスを示す。


            --> C1
 A1 --> B2  --> C2
    --> B2  --> D1
            --> D2 --> E1
                   --> E2

もしもウォレット指紋がA,B,D,Eが同一のウォレットによって作成されたと発見できたとして、他のトランザクションが他のソフトウェアによるものだとしたら、お釣りアドレスは明白になる。同じトランザクションでマッチするアドレスのないものをXで置き換えたものが以下である。ピーリング・チェーンが可視化されており、 B2, D2, E1 はA1と同一のウォレットに属するお釣りアドレスなのは明らかである。


            --> X
 A1 --> X   --> X
    --> B2  --> X
            --> D2 --> E1
                   --> X

ウォレットソフトウェアを特定するための痕跡はいくつもある:

* アドレス形式。ウォレットは普通一つのアドレス形式しか使わない。もしもトランザクションのインプットとアウトプットがすべての同じアドレス形式（例えばp2pkh）で残りのアウトプットが異なる形式(例えばp2sh)ならば、もっともらしい推定としては、同一アドレス形式（p2pkh）がお釣りであり、異なる形式のアドレス(p2sh)が別人に属する支払いということになる。

* [[Script]]形式。それぞれのウォレットは一般に一つのスクリプトしか使わない。例えば、支払いウォレットが[[P2SH]] 2-of-3 [[multisignature|マルチシグ]]ウォレットで、トランザクションには２つのアウトプットがあるとする。ひとつは2-of-3マルチシグアドレスでもう片方は2-of-2マルチシグアドレスである。異なるスクリプトは片方が支払いで片方がお釣りであるということを強く示唆する。

* [[BIP_0069|BIP69]] のインプット/アウトプットを辞書順に並べる方法。このBIPではウォレットがインプットとアウトプットをプライバシーのために標準的な並べ方で並べる方法を説明している。現在、ウォレットのエコシステムではこの標準化案を実装しているものとしていないものがあり、これによって特定が可能になる。1インプット2アウトプットの標準的なトランザクションではランダムな順序でもBIP69に50%の確率で従うということに注意せよ。

* インプットとアウトプットの数。ユーザーはしばしば他のユーザーと異なる方法でトランザクションを作成する。例えば、個人は2アウトプットのトランザクションを頻繁に作る。これは支払いとお釣りである。一方で、カジノや取引所のような巨額を扱うところではトランザクションの[[Techniques_to_reduce_transaction_fees#Consolidation|合併]]や[[Techniques_to_reduce_transaction_fees#Payment_batching|バッチ化]]<ref>Bitcoin Privacy: Theory and Practice - Jonas Nick (Blockstream) - Zürich, March 2016 https://www.youtube.com/watch?v=HScK4pkDNds</ref><ref>Nick, Jonas David. “Data-Driven De-Anonymization in Bitcoin.” (2015).</ref>などの手法を使う。後にバッチ化トランザクションを作るために使われたアウトプットはおそらくお釣りではないと言える。この近似は「消費者近似」と呼ばれる。

* トランザクションのフォーマット。トランザクションの値でウォレットによって変わりうる値が存在する。[[nLockTime]]は[[fee sniping|fee sniping(マイナーが手数料を目的にブロックを孤立させる行為)]]をやめさせるためにいくつかのウォレットで使われる。現在のエコシステムではこの機能を実装しているものとしていないものがある。nLockTimeは[[CoinSwap]]のようなプライバシープロトコルで使われることもある。[[Transaction#General_format_.28inside_a_block.29_of_each_input_of_a_transaction_-_Txin|nSequence]]も同様の例である。バージョン番号も同様。

* Low-R値の署名。ビットコインの署名をエンコードするのに使われるDERフォーマットでは、署名に数バイトを追加することで署名のR値が楕円曲線の上半分の値であるということを表現する。このR値はランダムに導出されるので、署名のうち半分はこの拡張バイトを持つことになる。2018年7月以来<ref>https://github.com/bitcoin/bitcoin/pull/13666</ref>、[[Bitcoin Core]]はlow-R値のみを生成するようになり、拡張バイトを必要としなくなった。これによって、Bitcoin Coreのトランザクションは2署名につき平均1バイトを節約できるようになった。2019年の時点では、他のウォレットではこれを実装していないので、high-R値の署名は[[Bitcoin Core]]が利用されていない証拠になりうる<ref>https://bitcoinops.org/en/newsletters/2018/08/14/</ref>。

* 非圧縮/圧縮公開鍵。古いウォレットソフトウェアは非圧縮公開鍵<ref>https://bitcoin.stackexchange.com/questions/3059/what-is-a-compressed-bitcoin-key</ref>を利用している。非圧縮/圧縮公開鍵の違いによって痕跡が残りうる。

* マイナー手数料。多くのウォレットソフトウェアが、mempoolやブロックスペースの状況に応じて異なる手数料を設定する。これによって様々なマイナー手数料が支払われることで、ウォレットの種類の痕跡が残りうる。

* コイン選択。様々なウォレットが別々のアルゴリズムでどのUTXOを消費するかを決定しているので、痕跡になりうる。

もしも複数のユーザーが同一のウォレットソフトウェアを利用していれば、ウォレット指紋はお釣りアドレスを検出することはできない。また、たんいつのユーザーが２つの異なる種類のウォレットソフトウェアを利用している可能性もある（例えばホットウォレットとコールドウォレット）ので、ウォレットソフトウェアの変更が検出されても、所有者が変わったとは限らない。ウォレットの指紋検出自体は確定的な証拠にはなりえないが、その他の情報漏洩と組み合わせることで特定につながりうる。

==== 端数 ====

多くの支払い量は1BTCや0.1BTCといったキリのいい数字である。残されたお釣りアドレスはキリの悪い端数(例えば1.78213974 BTC)になる。これはお釣りアドレスを特定するのに役立つ。量は他の通貨においてキリのいい数字である可能性もある。例えば2.24159873 BTCは端数だが、USDに変換すると$100に近いということがありうる。

==== [[Fee bumping|手数料増額]] ====

This could be mitigated by some of the time reducing the amount of both outputs, or reducing only the payment amount (in a sender-pays-for-fee model).

[[BIP 0125]]は未承認トランザクションの手数料を更新して増額する手法を定義している。[[Miner_fees#The_market_for_block_space|ブロックスペース市場]]の文脈では、ユーザーは[[Fee bumping|fee bump]]や手数料の増額を行う。一般的に新しく増額されたマイナー手数料はお釣りの量から差し引かれることになる。もしも攻撃者がすべての未承認トランザクションを観測しているのであれば、攻撃者からは低い手数料のトランザクションと高い手数料のトランザクションが見えることになり、量が手数料の分だけ低下した方がお釣りのアウトプットになる。


これは、時々意図的に、両方のアウトプットの量を減らしたり、支払い側のみのアウトプットを減らす（送金者がその後の手数料を負担するような場合）ことで回避できる可能性がある。

==== 不要なインプットによる近似  ====

「最適お釣り近似」とも呼ばれる。以下のようなビットコイントランザクションを考える。3BTC、5BTCの2つのインプットと1BTC、4BTCの２つのアウトプットを持つ。

 2 btc --> 4 btc
 3 btc     1 btc

どちらかのアウトプットがお釣りであり、片方が支払いであると仮定すると、２つの解釈が可能になる。支払いアウトプットは4BTCまたは1BTCである。しかし、もしも1BTCが支払いであるなら、3BTCのインプットは最初から必要ないはずである。ウォレットは2BTCインプットのみを消費することによってマイナー手数料を安くすませることもできたはずである。これは、真の支払いアウトプットが4BTCであり、1BTCがお釣りアウトプットであるということを示唆している。


これは、2つ以上のインプットを持つトランザクションについての問題である。回避策として、お釣りアドレスのアウトプットがどのインプットよりも多くなるようにインプットを追加することができる。

 2 btc --> 4 btc
 3 btc     6 btc
 5 btc


これによって、どちらの解釈であっても、インプットのうちどれかは不要であるということになる。残念ながら、これはより多くのマイナー手数料がかかり、他にもUTXOを持っているウォレットでしか実現できない。

いくつかのウォレットではこの近似を破るようなコイン選択アルゴリズムを使用している。例えば、ウォレットはマイナー手数料が安いうちにインプットを集めておくことがある。したがって、この近似は決定的な証拠にはならない。

==== 異なるスクリプトへの送金 ====

資金を、自分が消費しているアウトプットとは異なるスクリプトに送金することで、どのアウトプットがお釣りか判定しやすくなる。

例えば、1インプットのp2pkhのコインを消費して2つのアウトプットを作り、アウトプットの片方がp2pkhでもう片方がp2shだった場合、p2pkhのアウトプットはお釣りでp2shが支払いである可能性が高い。

これはまた、インプットがいくつかのスクリプトタイプの混合であった場合でも可能である（複数のスクリプトタイプを後方互換性のためにサポートしているウォレットの場合）。
もしも片方のアウトプットのスクリプトタイプがそのウォレットで使用されているものであり（同じスクリプトタイプが少なくともどれか一つのインプットによって消費される）、もう片方がそうでないのであれば、もう片方はおそらく支払いだろう。

これは、p2shやsegwitといった新しい技術のアーリーアダプターに最も効果がある。
あなたと同じスクリプトタイプに支払う人が少なければ少ないほど、あなたのお釣りアドレスがどれかを漏洩しやすくなる。
これは新しい技術が広まるにつれプライバシーが改善していく。


==== ウォレットのバグ ====

いくつかのウォレットではプライバシーの無い方法でお釣りを扱うものがある。例えば、ある古いウォレットではお釣りアドレスを必ずトランザクションの最後尾に位置させる。古いバージョンの[[Bitcoin Core]]ではお釣りの量が0.1BTC程度になるまでインプットUTXOを追加していたので、0.1BTCをわずかに超えるような量はお釣りであろうと言える。

==== 同量アウトプット [[CoinJoin]]====

アウトプットが同量でないものを見つければ良いので、同量アウトプットCoinJoinのトランザクションではお釣りアドレスがどれか当てるのは簡単である。例えば、以下の同量アウトプットCoinJoinの例を考える:

               A (1btc)
 X (5btc) ---> B (1btc)
 Y (3btc)      C (4btc)
               D (2btc)

アウトプットDがお釣りアドレスでありインプットYに属し、アウトプットCがお釣りアドレスでありXに属するということが強く示唆される。しかし、CoinJoinでは共通インプット所有推定を壊すことができ、支払いアウトプットAとBの所有者を隠すことが可能なので、トレードオフを考えると、まだCoinJoinを使うべきである。

==== クラスターの成長 ====

共通インプット所有推定によって作られたウォレットクラスターは次第に成長し、ゆっくりと増加していく。<ref>Harrigan, Martin & Fretter, Christoph. (2016). The Unreasonable Effectiveness of Address Clustering.</ref> ２つの巨大なクラスターが合併するのは珍しいことなので、近似の手法が間違っていることを示唆する。お釣りアドレスを推論する別の方法としては、どのアウトプットがクラスターをゆっくりと成長させるのかに着目することである。「どのくらいゆっくりと」成長するのかについての具体的な数値は不明である。


=== トランザクショングラフ ===

はじめに説明したように、アドレスはブロックチェーン上のトランザクションによって結ばれる。このすべてのトランザクションとアドレスの情報はトランザクショングラフと呼ばれる。

トランザクションは普通実経済のトランザクションとみなされるが、しばしばトランザクションは誰かが自分自身にビットコインを送金しているだけということが実際にはありうる。

「着色分析」はビットコインの流れを追跡し、プライバシーに関係した情報を抽出する技術である。もしもアドレスAがプライバシーに関わる情報(例えば実名)に紐付いており、アドレスBにコインを送るトランザクションを発行したとき、BはAからのコインによって「着色」されたとみなす。このようにして、着色がトランザクションに触られることによって広がる。<ref>Meiklejohn, Sarah & Orlandi, Claudio. (2015). Privacy-Enhancing Overlays in Bitcoin. 127-141. 10.1007/978-3-662-48051-9_10. https://fc15.ifca.ai/preproceedings/bitcoin/paper_5.pdf</ref>.着色分析は所有権の移転について何もわからないので実際のところ監視にどれほど効果があるのかは不明である。例えば、着色されたコインの持ち主がチャリティーに募金したとすると、募金されたコインは着色されたことになるが、チャリティーはそのようなコインの出所について無知であり、何らの情報も持たない。着色分析は、誰かがコインの由来を隠すために多くの偽トランザクションを自分自身に向けて発行するようなケースを見破るのには便利かもしれない。

=== 量 ===

ブロックチェーンのトランザクションはインプットとアウトプットに関する量の情報を持ち、マイナー手数料の情報も持つことになる。これはすべて可視化されている。

しばしば、トランザクションの支払い金額は（他の通貨との交換レートなどにおいて）丸められた数字である。ビットコインのトランザクションにおける丸め値の分析は、どのような地域で支払いが行われているのかを観測するために行われたことがある。<ref>Gervais A., Ritzdorf H., Lucic M., Lenders V., Capkun S. (2016) Quantifying Location Privacy Leakage from Transaction Prices. In: Askoxylakis I., Ioannidis S., Katsikas S., Meadows C. (eds) Computer Security – ESORICS 2016. ESORICS 2016. Lecture Notes in Computer Science, vol 9879. Springer, Cham https://eprint.iacr.org/2015/496</ref>.

==== インプットの量が送金者の資産を公開する ====

利用可能なインプットのサイズと、支払いに必要な金額のサイズの差が、送金者の総資産の情報を漏洩する可能性がある。例えば、1BTCを送金したいのに、ユーザは10BTC分のインプットしか持たない可能性がある。これによって1BTC分の支払いと9BTC分のお釣りを作ることになる。受信者はトランザクションを見ることで送金者が最低でも10BTCを所有していたことを知ることができる。

紙幣のアナロジーで言えば、100USD分の紙幣を5USD分の飲み物の支払いに利用すれば、バーテンダーはあなたが残り95ドルを持っていることを知ってしまうということになる。この例よりも遥かに高額ということはありえるが、インプットより少額ということにはならない。<ref>https://medium.com/@octskyward/merge-avoidance-7f95a386692f</ref>.


==== お釣りのない支払い ====

お釣りのない支払いはおそらくビットコインの所有者が変わっていないということを意味する。

これは実際には、ユーザーが「最大限送金する」というウォレットの機能を使って自分自身の新しいウォレットや取引所やLightningのチャネルなどに送金したまま所有者が変わらないことを意味する。

他のありうる理由としては、コイン選択アルゴリズムが賢くインプットを選択したことで幸運にもお釣りが不要になった（またはお釣りが不要なほどの少額になった）ということを意味するか、またはパワーユーザーがお釣りを避けるために明示的に手動でコインを選択して寄付をした可能性もある。

=== バッチ化 ===

[[Techniques to reduce transaction fees#Payment_batching|支払いのバッチ化]]は支払い時にマイナー手数料を削減するテクニックである。いくつもの支払いを単一のトランザクションにまとめる。取引所やカジノなど取引量の多い事業者で使われる。

プライバシー面では、受信者が他の受信者のアドレスと量を見ることができる。<ref>https://bitcointechtalk.com/saving-up-to-80-on-bitcoin-transaction-fees-by-batching-payments-4147ab7009fb</ref>

<blockquote>
Krakenから出金を受け取る時、トランザクションを参照すると、同じトランザクションで出金した他のユーザ全員のアドレスを見ることができる。誰が出金者かは不明だが、Krakenからビットコインをあなたと同じように受け取ったことはわかってしまう。

これはプライバシーの面ではあまり良くない。しかし、最悪というわけではない。Krakenがもしこれらの支払いを分割した場合、結局お釣りアドレスやその他のブロックチェーン解析企業や個人の持っている技術を使うことで他のアドレスも知られてしまうということがありうる。

しかし、プライバシーが必要な局面や、すでにプライバシーが弱くなっているような場面（小さな会社で従業員が他の従業員の給料を見ることができないようにしたい場合など）でバッチ化をする際には頭に入れておきたいことである。
</blockquote>


=== 不自然なスクリプト ===

殆どのビットコインのスクリプトは単一の署名ですむが、そうでないものもある。他のスクリプトとして一般的なのはマルチシグである。非常に不自然なスクリプトは、目立つために多くの情報を漏洩することになりうる。

2-of-3マルチシグが2019年では非単一署名のスクリプトとしては最も一般的である。

=== 覆面調査による支払い ===

ミステリーショッパーペイメント(覆面調査による支払い)とは、攻撃者がプライバシー関連の情報を取得するために、ターゲットに対してビットコインを支払うことである。これはアドレスの再利用を避けても起こりうる。たとえば、ターゲットがオンラインショップを経営している場合、攻撃者はそこで商品を買うことができる。支払い画面で攻撃者はターゲットのビットコインアドレスのうちの一つを見ることになる。攻撃者はこのアドレスがターゲットの所有であることを知っているので、後に情報が漏洩したときのためにブロックチェーンを監視することができる。漏洩した情報を他のテクニックと組み合わせることでターゲットの情報をさらに知ることができる。共通インプット所有推定とお釣りアドレスの検出によって、ターゲットに属する他のアドレス情報を発見可能であり（ターゲットがCoinJoinなどを使っていないと仮定する）、売上の金額の下限を知ることもできる。この手法は、ターゲットのアドレスをインターネット上の誰でもリクエストできることによって可能になっている。

=== 強制アドレス再利用 ===

強制アドレス再利用は、攻撃者が少額のビットコインを既にブロックチェーン上で利用されたアドレスに送付する攻撃である。攻撃者はユーザーやウォレットソフトウェアが送付されたビットコインをより大きなトランザクションに使うことで他のアドレスを共通インプット所有推定から公開させようとしている。このような支払いはアドレス再利用を意図的に引き起こすものとして検出される。<ref>https://www.reddit.com/r/Bitcoin/comments/3a1hte/psa_dust_being_sent_to_your_addresses_might_help/</ref><ref>https://www.reddit.com/r/Bitcoin/comments/9r9qud/if_you_have_recently_received_a_very_small_amount/</ref>.

=== 量の関連付け ===


量の関連付けは、ブロックチェーン全体のすべてのアウトプットの量を探索することを意味する。

例えば、トランザクショングラフを分断する何らかのブラックボックス化されたプライバシー技術を使うとする。

 V --> [black box privacy tech] --> V - fee

このプライバシー技術は量Vのビットコインを混ぜる技術であり、Vから手数料を除いた金額をユーザーに返す。量の関連付けは、ブロックチェーン全体を探索してVに近い量のアウトプットを探すことでこのミキシング技術を無効化する試みである。

量の関連付けに対抗するには、ユーザーにコインを返却するときに複数のトランザクションに分けておき、アウトプットの量(w0, w1, w2)を足すとVから手数料を除いた金額になるようにしておくことである。

 V --> [privacy tech] 	--> w0
 			--> w1
 			--> w2

量の関連付けを使う別の方法としては、出発点を見つけることである。例えば、もしもボブがアリスを監視したいとする。アリスが$5000かけてボーイフレンドと休日に出かけると言っていたとすると、ボブはブロックチェーン上でアウトプットが$5000に近いすべてのトランザクションを探すことができる。もし候補がいくつも見つかったとしても、ボブはアリスの所有するアドレスの候補を絞り込めたことになる。

=== タイミング関連付け ===

タイミング関連付けは、ブロックチェーン上のトランザクションの時間の情報を使う。量の関連付けと同様に、もし攻撃者が、気になるトランザクションが発行される時間を知っているのであれば、ブロックチェーン上を探すことでそのようなトランザクションの候補を絞り込むことができる。

これは、現在から適切な時間の間で一様分布に従ってランダムにタイミングを選択することで防ぐことができる。これで攻撃者はさらに多くのトランザクションを検索しなければならなくなる。攻撃者は、現在から、選んだ適切な時間の間の匿名化されたトランザクションの集合を探索する必要がある。


== ブロックチェーンに基づかないプライバシーへの攻撃 ==

=== トラフィック分析 ===

ビットコインのフルノードは互いに[[Network|P2Pネットワーク]]を通じてトランザクションやブロックを送信している。[[Network#Standard_relaying|ノードはこれらを中継]]して、接続しているすべてのノードにパケットを送信する。これによって接続ノードは送信されたデータがピアから発生したのか、それともただ中継されただけなのかがわからなくなるため、プライバシーに寄与している。

政府、ISP、wifi提供者、VPN事業者などのような、インターネット接続を監視できるような攻撃者はノードで送受信されるデータを閲覧することができる。これによってあなたがビットコインのユーザーであることが明らかになってしまう。
接続が暗号化されていても、攻撃者はデータパケットのサイズとタイミングを観測することが可能である。ビットコインのネットワークでは特定のタイミングで特定のサイズのブロックが採掘され、全てのビットコインノードで一様なパターンのトラフィックが観測されるので、ビットコインのソフトウェアの存在自体を秘匿するのは非常に難しい。
もしも攻撃者がトランザクションやブロックを観測し、それがこれまでにノードに受信されていなかったにも関わらずノードから送信された場合、そのトランザクションがあなたによって作られたもので、ブロックはあなたによって採掘されたものだとほぼ確信をもって言えることになる。インターネット接続を監視できる攻撃者の場合、トランザクションなどのビットコインに関連する情報をIPアドレスと紐付けることが可能になる。

ある種の[[Weaknesses#Sybil_attack|シビル攻撃]]によって、インターネット接続をコントロールしていない攻撃者でもトランザクションやブロックの発生源が発見されてしまう可能性がある。これは、攻撃者が大量の偽のノードを異なるIPアドレスで作成し、より多くのノードを自身に接続させるように仕向けることで行われる。また、そのような自身も可能な限り多くのノードと接続しようと試みる。この接続率の高さによって、攻撃者は新しく発生したトランザクションやブロックがネットワークを伝播するのを観測できる。<ref>https://www.reddit.com/r/Bitcoin/comments/2yvy6b/a_regulatory_compliance_service_is_sybil/</ref><ref>Alex Biryukov, Dmitry Khovratovich, and Ivan Pustogarov. 2014. Deanonymisation of Clients in Bitcoin P2P Network. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS '14). ACM, New York, NY, USA, 15-29. DOI: 10.1145/2660267.2660379 https://arxiv.org/abs/1405.7418</ref><ref>Koshy, Philip & Koshy, Diana & McDaniel, Patrick. (2014). An Analysis of Anonymity in Bitcoin Using P2P Network Traffic. 8437. 469-485. 10.1007/978-3-662-45472-5_30. http://ifca.ai/fc14/papers/fc14_submission_71.pdf</ref><ref>https://github.com/bitcoin/bitcoin/issues/3828</ref>.いくつかのウォレットではネットワークで承認を得やすくするために、未承認トランザクションを定期的に再送信することもある。

フルノードではないウォレットについて、軽量ノードとして機能するものもある。一般的に、それらのプライバシーの特性はより悪化しているが、どのくらい悪化しているのかはそれぞれのウォレットに依存する。軽量ウォレットはあなた自身のフルノードと接続できるものもあるが、そうした場合、トラフィック解析に対するプライバシーのレベルについてはフルノードと同程度のレベルまで改善する。


=== カストディウォレット ===

ビットコインのウォレットの中には、私企業が用意したバックエンドサーバーに接続するフロントエンドのみ用意しているものもある。このようなウォレットにはプライバシーは存在せず、企業はユーザーのアドレスとトランザクションを監視することができ、多くの場合そのような企業はユーザーのIPアドレスも記録している。ユーザーはウェブウォレットを利用するべきではない。

メイン記事: [[Browser-based wallet|ブラウザウォレット]]

=== 第三者によるウォレット履歴の取得 ===

すべてのビットコインのウォレットは残高と履歴に関する情報を取得する必要があり、これによってアドレスとトランザクションに関する情報が漏洩する可能性がある。

==== ブロックチェーンエクスプローラー ====

[[Block chain browser|ブロックチェーンエクスプローラーのウェブサイト]]は一般的に利用されている。自分自身のトランザクションをそのようなウェブサイトで検索し、3認証に達するまでウェブサイトを更新するようなユーザーもいる。これはプライバシーの面から非常に不都合である。そのようなウェブサイトはユーザーのIPアドレスとビットコインのトランザクションを簡単に関連付けることができる（Torを使わない限り）。そしてトランザクションやアドレスをそのようなウェブサイトで検索することで、特定の行動パターンを持ったユーザーがそのようなトランザクションやアドレスに興味を示していることが伝わってしまう。

自分のトランザクションに関する情報を得るためには、ウェブサイトではなく自分自身のウォレットソフトを使う方がよい。

==== BIP 37 ====

多くの軽量ウォレットは[[BIP_0037|BIP37]]の標準仕様を使っている。これには深刻な設計上の欠陥があり、プライバシー情報の漏洩につながることになる。BIP37を利用しているウォレットにはプライバシーは全く無いのであり、ウォレットすべてのアドレスを適当なサーバーに送信しているのと同等である。そのサーバーはウォレットを簡単に監視できる。他のプライバシー関連技術を理解し設計しようとする時には、とりわけブルームフィルターとトランザクション情報の漏洩のデータ融合という点において、BIP37の失敗から学べることもあるかもしれない。

メインの記事: [[BIP37 privacy problems|BIP37 プライバシー上の問題]]

==== 公開Electrumサーバー ====

[[Electrum]]は人気のあるソフトウェアウォレットで、特別なサーバーと通信することで機能する。これらのサーバーはウォレットのビットコインアドレスのハッシュを受け取り、トランザクションの情報を返却する。Electrumウォレットは高速でリソースを消費しないが、デフォルトの状態ではユーザーを監視できるサーバーに接続する。Electrum以外のソフトウェアも公開Electrumサーバーを使うことがある。2019年の時点で、これは軽量ウォレットの代替として、BIP37よりも優れている。

サーバーはアドレス自体ではなく、アドレスのハッシュのみを知ることができる。実際にはブロックチェーン上に少なくとも一度記録された、本物のアドレスと、それに関連したトランザクションだけを知ることになる。

自分でElectrumのサーバーを動かして、ウォレットにそのサーバーを使うよう設定することは難しくない。これによってElectrumは自分以外誰もウォレットに関係したアドレスやトランザクションを見ることができないという点でフルノードと同程度のプライバシーとセキュリティを得ることになる。その時Electrumはフルノードウォレットとなる。

=== 通信の盗聴 ===

単純だが効果的な情報漏洩である。アリスがボブに支払いを受け付けるためのアドレスを渡すが、その通信がイブによって盗聴され、アドレスがアリスの所有であることが知られてしまうということがありうる。解決策は、アドレスを適切に暗号化するか、脅威モデルに即した攻撃者から隠れて通信できる別の方法を使うことである。

しばしば、盗聴は非常に単純である。例えばフォーラムのユーザーがビットコインの寄付アドレス、フォーラム署名、プロフィール、Twitterのページなどを自分のウェブサイトで公開している場合があり、それが検索エンジンに見つかることがある。はじめに話した非匿名の独裁国家人が新聞を買う例で言えば、彼のアドレスがフォーラムの署名部分に書かれて公開されていたことが非匿名化において決定的だった。解決策は、寄付する人それぞれに新しいアドレスを見せることである。例えば、[[Receiving_donations_with_bitcoin#Improving_privacy_by_avoiding_address_re-use|訪問者ごとに新しいアドレスを見せるようなウェブサーバーの設置]]などである。

=== ビットコインでの取引時に情報を公開してしまう ===

しばしばユーザーは自分からデータを公開してしまうことがある。または、関係する機関によってデータを要求されることがある。例えば、多くの取引所ではユーザーに反マネーロンダリングとKYCのチェックを行うように求めることがある。これによって、ユーザーは本名、住所、職業、収入などの侵襲的な個人情報公開することを要求される。このような情報はビットコインアドレスやトランザクションと関連付けられることになる。

商品をビットコインで買う時、配送先の住所が必要である。これによってビットコインのトランザクションを配送先住所に関連付けることになる。これはTorのようなプライバシーを守る技術を使わない限り、ユーザーのIPアドレスにも同じことが言える。

=== デジタルフォレンジクス ===

ウォレットソフトウェアは普通、必要な情報をコンピュータ上のディスクに保管している。攻撃者がそのディスクにアクセスした場合、アドレスとトランザクションがそのディスクの所有者と紐付けられてしまう。同じディスクは別の個人情報（IDカードのスキャンなど）を含んでいる可能性もある。弱いパスワードを使った場合は別だが、良いウォレットソフトウェアはウォレットファイルを暗号化することでこのようなデジタルフォレンジックスに対抗しようとしている。

例えば、ビットコインのウォレットをPCにインストールしておいて、それを修理屋に持っていくと、修理屋の技術者はウォレットファイルとトランザクションの記録をすべて見つけてしまうかもしれない。他の例としては、もし古いハードディスクを廃棄した場合である。同じコンピュータにインストールされている別のマルウェアのようなソフトウェアもディスクやRAMを覗くことでユーザーによるビットコインのトランザクションを監視することができる。

プライバシーのためには、他人がアクセスできるコンピュータに情報を残してはならない。どのようにすべきかは脅威モデルによる。暗号化と物理的な防御、ハードドライブへの読み書きをせず、RAMのみを使い、シャットダウン時にはすべてのデータを削除する[https://tails.boum.org/ Tails OS]のような特別なOSを使うなどの方法がある。

== ブロックチェーン外でプライバシーを強化する方法 ==

=== ビットコインを匿名で入手する ===

攻撃者があなたのビットコインアドレスと個人情報を関連付けていないのであれば、プライバシーはもっと簡単になる。共通インプット所有推定やお釣りアドレスの検出は、そもそも関連付けを始めるスタート地点がなければあまり有効ではない。

多くの取引所ではユーザーにAML/KYCのチェックを課しており、ユーザーは実名、住所、職業、収入などの侵襲的な個人情報を公開するように要求される。このような情報は後にビットコインのアドレスやトランザクションと結び付けられる。

AML/KYCのようなプライバシーの侵害を防ぐことは、個人にとってプライバシーを改善する上で最も大切なことである。これはその他のCoinJoinのような実際の技術よりもはるかに良いものである。実際、AML/KYC機関の間のみですべてのユーザーが取引をするのであれば、暗号やプライバシーのトリックは無関係な話である。<ref>https://twitter.com/waxwing__/status/983258474040774657</ref>.

==== 現金取引 ====

現金は匿名性の高い交換媒体であり、現金を使うことはビットコインを取引相手以外の誰とも情報交換をせずに匿名で入手するための手段である。

このセクションではそのようなミートアップを探すためのウェブサイトをリスト化することはしない。そのような情報はすぐに古くなってしまう。代わりに、インターネット検索で「現金でビットコインを購入 <場所>」と検索してみよう。いくつかのサービスはIDカードを要求することもあるので、前もってチェックしておいた方がよい。あるサービスでは、トレーダーが広告を出すときにのみIDを要求することがあるようだ。2018年後半において、少なくともひとつ[[Bisq|オープンソースの非中央集権型取引所]]が開発中であり、このようなタイプの取引を、中央集権化された第三者を必要とせずにp2pネットワークを利用して行うことができる。

'''個人的に会って現金取引''' をするのは古いやり方だが、人気がある。二人のトレーダーはどこかで落ち合う約束をして、買い手が現金を渡し、売り手がビットコイントランザクションを買い手に発行する。これはクレイグズリストのように交換のためにミートアップの約束をするインターネット上の現象と似ている。[[Secure Trading#Use_an_Escrow_Service|エスクローを使うこともできる]]。これによって安全性を確保し、ミートアップで承認を待つ必要も省ける。

'''現金の郵送'''は、買い手が現金を郵便で送る方法である。[[Secure Trading#Use_an_Escrow_Service|エスクロー]]を使って詐欺を防ぐ。ビットコインの買い手は非常に匿名だが、売り手は住所を買い手に伝えなければならない。現金の郵送は長距離でも有効だが、郵送サービスのインフラにもよる。ユーザーは地元の郵便局で現金を送る際のガイドラインがあるかどうかを調べた方が良いだろう。現金の郵送には保険を掛けることもできる。

'''現金の入金'''は、買い手が現金を売り手の銀行口座に直接振り込む方法である。エスクローを使い、ビットコインの買い手は匿名に近い状態で購入できるが、売り手は銀行や金融機関に登録して侵襲的な個人情報や金融履歴などを登録する必要がある。この方法は銀行のインフラに依存するが、遠距離でも有効である。

'''現金のドロップ'''は、あまり使われない方法である。これは個人的な現金取引に近いが、トレーダー同士は落ち合うことがない。買い手は現金を隠す場所を公共の場所の中で見つけ、その後売り手に場所を教える。売り手は現金を隠された場所から見つける。詐欺を防ぐためにエスクローは必須である。この方法は売り手買い手ともに匿名性が高く、物理的に出会う必要もない。売り手にとっては、買い手が現金を隠した場所を監視する可能性があるので少しだけ匿名性が低くなる。

==== 現金の代替 ====

ギフトカード、携帯電話のクレジットやプリペイドデビットカードなどを普通の店で現金で購入してオンラインでビットコインと交換することができる。

==== 給与 ====

仕事の報酬としてビットコインを受け取る場合、雇い主が多くの個人情報を尋ねないのであれば匿名になりうる。フリーランスや契約単位の場合には効果があるはずである。しかし、自分自身の雇い主が攻撃者である場合には当然良いプライバシーとは言えない。

==== マイニング ====

マイニングはビットコインを入手する方法としては最も匿名性が高い方法である。これはソロマイニングで有効である。[[Pooled mining|マイニングプール]]は普通マイナーのIPアドレスを知っている。マイニングの規模によっては大量の電気を使うため疑いをかけられるかもしれない。また、[[ASIC|マイニング機器]]は匿名で入手するのは難しいかもしれない（採掘されたビットコインとは紐付かないが）。

==== 窃盗 ====

理論上、匿名のビットコインを入手する方法として、窃盗もありうる。<ref>https://twitter.com/thegrugq/status/1062194678089404421</ref>

少なくとも、このような状況が発生したことが一度はある。2015年5月、Phineas Fisher<ref>https://motherboard.vice.com/en_us/article/3k9zzk/hacking-team-hacker-phineas-fisher-has-gotten-away-with-it</ref> というハッカーが、独裁者に監視用製品を売っていたスパイウェア会社<ref>https://motherboard.vice.com/en_us/article/nzeg5x/here-are-all-the-sketchy-government-agencies-buying-hacking-teams-spy-tech</ref>をハッキングした。このハッカーは他人から盗まれたビットコインを使って、その後の攻撃のためのインフラを匿名で借りていた。

=== ビットコインを匿名で使う ===

もしも届け先住所を渡してしまった場合（物理的な商品をオンラインで買う場合には避けられない）、データの漏洩が起こりうる。これは多くの場合仕方のないことである。

=== ウォレット履歴の同期 ===

ビットコインのウォレットは残高と履歴を取得する必要がある。2018年後半の時点で、もっとも実用的でプライバシーのある方法は、フルノードウォレット(最大のプライバシー)とクライアントサイドブロックフィルター(とても良いプライバシー)の利用である。

これらの技術における問題点は、プライバシーの無い他の方法（Electrumの中央集権サーバやウェブウォレット）と比べて、費用とリソースがかかるという点である(時間、帯域、ストレージなど)。BIP37を使っている人は非常に少ないという計測結果がある。<ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016062.html</ref>よって、クライアントサイドブロックフィルターはあまり使われていない可能性がある。

==== フルノード ====

フルノードはビットコインで発生した全てのオンチェーントランザクションを含む、ブロックチェーン全体をダウンロードする。ユーザーのインターネット接続を監視している攻撃者はユーザーが興味を持っているアドレスやトランザクションについて[[Full node#Privacy|知ることができない]]。これはウォレット履歴を同期する方法としてプライバシーの面で最良だが、残念なことに多くの時間と帯域が必要である。

==== プライベート情報検索 ====

暗号学において、プライベート情報検索(PIR)のプロトコルは、ユーザーがデータベースを持つサーバーから、サーバーに取得する情報を伝えることなく、アイテムを取得するプロトコルである。これはプライベートにウォレット履歴を同期する方法として提案されたが、PIRは非常にリソース消費が激しいため、帯域と時間に余裕のあるユーザーは代わりにフルノードを稼働させるべきである。

==== クライアントサイドブロックフィルター ====

[[Client-side block filtering|クライアントサイドブロックフィルター]]は、ブロック中の全てのトランザクションのアドレスを含むようなフィルターを作ることで機能する。フィルターは、要素が集合に入っているかどうかをテストすることができる。偽陽性は出現するが、偽陰性は出現しない。軽量ウォレットは全てのブロックに対してフィルターをダウンロードし、自身のアドレスにマッチするものがあるかどうかを確認できる。マッチしたブロックはp2pネットワークからダウンロードされ、そのブロックからウォレットの履歴と現在の残高を取得することができる。

==== onionルーティングを通したアドレスの要求 ====

ウォレット履歴は、アドレスごとに異なるTorサーキットを通じて中央集権的なサーバ（例えばElectrumサーバ）から取得することもできる。似たアイデアとして、Electrumのサーバをonionルーティングのネットワークに接続するという案がある。<ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009510.html</ref>.　このようなスキームを作るときには、アドレスを関連付けさせてしまうような、タイミング関連付け攻撃などに注意しなければならない。さもないとサーバーはアドレスが短時間のうちに要求されたことに気づいてしまうかもしれない。


=== トラフィック解析への対抗策 ===

Bitcoin Coreとそのフォークはシビル攻撃とエクリプス攻撃に対する対抗策を持っている。エクリプス攻撃はシビル攻撃の一種で、攻撃者がターゲットの全てのピアをコントロールし、ネットワークへのアクセスをブロックしたりコントロールしたりする攻撃である。<ref>https://bitcoin.stackexchange.com/questions/61151/eclipse-attack-vs-sybil-attack</ref> このような攻撃は2015年の論文[https://eprint.iacr.org/2015/263.pdf Eclipse Attacks on Bitcoin’s Peer-to-Peer Network]で詳細に研究され、対策としてBitcoin Coreのための新しいコードが書かれることになった。<ref>https://github.com/bitcoin/bitcoin/pull/8282</ref><ref>https://github.com/bitcoin/bitcoin/pull/5941</ref><ref>https://github.com/bitcoin/bitcoin/pull/9037</ref><ref>https://github.com/bitcoin/bitcoin/pull/8594</ref><ref>https://github.com/bitcoin/bitcoin/pull/12626</ref>

Bitcoin Coreとそのフォークは、シビル攻撃の攻撃者がトランザクションの送信元IPアドレスを取得するのが可能な限り難しくなるように、未承認トランザクションをリレーするアルゴリズムとしてtricklingを使っている。全てのピアにたいして、ノードは[[Network#Messages|送信(inv)]]する予定のトランザクションのリストを保持している。ノードはトランザクションのそれぞれのinvメッセージを、ランダムな遅延を間に取りながら送信する。トランザクションはinvメッセージに手数料を考慮した上でランダムに選択されて入れられる。invメッセージには限られた数のトランザクションだけを入れる。このアルゴリズムによって、作成者の隣接ノードであっても、未承認トランザクションを、実際の作成者ではなく作成者の隣接ノードから受信する可能性を作り出す。<ref>https://bitcoin.stackexchange.com/questions/83018/transaction-relay-and-trickling-in-bitcoin</ref><ref>https://github.com/bitcoin/bitcoin/issues/13298</ref><ref>https://github.com/bitcoin/bitcoin/pull/7125</ref><ref>https://github.com/bitcoin/bitcoin/pull/7840</ref>.それでも、攻撃者はプライバシー関連情報の取得に成功することもある。

[https://github.com/bitcoin/bips/blob/master/bip-0151.mediawiki BIP 151]のようなピア間での暗号化メッセージによって、ISPやWifi提供者などの受動的な攻撃者がビットコインノードの通信メッセージを覗き見るのを困難にすることも考えられている。

==== TorとTor経由でのブロードキャスト ====

接続をコントロールする攻撃者が問題になる場合は、ビットコインは完全にTor上で稼働することもできる。Torは暗号化されておりノードの場所を隠すことができるので、ISPやWifi事業者はあなたがビットコインを利用しているということすら知ることができなくなる。接続された他のビットコインノードはあなたのTorによって秘匿化されたIPアドレスを見ることができなくなる。
Bitcoin CoreとそのフォークはTorをセットアップして利用するのを簡略化する機能もある。軽量ウォレットの中にもTor経由で機能するものがある。

完全にTor上で動くことには欠点もある。ノードの同期ではTorからブロックチェーン全体をダウンロードしなければならないが、非常に低速である。ブロックをTorからダウンロードするのは、ISPに対してビットコインが使われていること自体を完全に隠したい場合のみ意味がある。<ref>https://bitcointalk[dot]org/index.php?topic=7.msg264#msg264</ref>　通常のインターネットからブロックや未承認トランザクションをダウンロードする一方で、自分自身のトランザクションはTorを経由させるような使い方もできる。これによって高速な接続を保ちながら、トランザクションの送信ではプライバシーが保たれることになる。

Bitcoin Coreが<code>walletbroadcast=0</code>のオプションを設定された場合、ユーザーのトランザクションは送信・再送信されることがなくなり、ユーザーがTorやプライバシーを保護した経路で安全に手動で送信することができるようになる。<ref>https://github.com/bitcoin/bitcoin/pull/5951</ref>.


==== ダンデライオン ====

ダンデライオン（タンポポ）はトランザクション送信のプライバシーを保護する別の技術である。元のアイデアは、トランザクションの伝播が2段階に別れるというものである。まず最初に(タンポポの)「幹」の段階があり、その後「綿毛」が拡散する段階がある。幹の段階ではノードがトランザクションを単一のピアにのみリレーする。ランダムなホップ数を経由した後、トランザクションは綿毛の段階になる。この時点でトランザクションは通常のブロードキャストとして拡散されることになる。攻撃者が綿毛の段階の発生源を突き止めることができても、幹の発生源を突き止めることは非常に難しい。<ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-June/014571.html</ref><ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/015030.html</ref><ref>https://bitcoinmagazine.com/articles/anatomy-anonymity-how-dandelion-could-make-bitcoin-more-private/</ref><ref>https://www.youtube.com/watch?v=XORDEX-RrAI&t=7h34m35s</ref>


==== ピアとの相互作用とブロードキャスト ====

CoinJoinやCoinSwapのようなプライバシー強化技術では他のサービス関係者と相互作用する必要がある。このようなプライバシープロトコルでは既存のプロトコルで互いに通信し、未承認トランザクションを互いに送信しあうので、プライバシーを強化してトランザクションを送信するのにも使える。

例えば、[[JoinMarket]]において、マーケットテイカーはトランザクションをマーケットメイカーに送信してもらうことになるので、テイカーのプライバシーは守られる。これは、テイカーによってTorのようなサービスを利用するよりも便利なことである。

==== ビットコインのデータを衛星から受信する ====

少なくとも1つのビットコイン関連企業が、ビットコインの衛星通信サービスを提供している<ref>https://blockstream.com/satellite/</ref>。これは無料のサービスであり、衛星がビットコインのブロックをほぼ全世界に送信できるものである。もしもユーザーがパラボラアンテナを宇宙空間の衛星に向ければ、フルノード運用に必要なビットコインのブロックを受信することができる。衛星からは受信だけしかできないので、誰もユーザーがビットコインを動かしているということを知ることができず、どのようなアドレスやトランザクションに関連しているのかも知ることはできない。

2019年の時点で、同じ会社が衛星経由で世界のどこからでもデータを送信できる有料APIを提供しており、これによってサービスの運営費を賄っていると思われる。基盤サービスとしてのブロック配信サービスはこれからもおそらく無料である。


メイン記事: https://blockstream.com/satellite/


== ブロックチェーン上でプライバシーを改善する方法 ==

このセクションではブロックチェーン上永久に残る記録であるトランザクションにおける、様々なプライバシー改善技術を説明する。いくつかの技術に関しては簡単なもので、すでにほとんどの良いビットコインのウォレットに含まれている。またいくつかの技術はオープンソースプロジェクトやサービスとして実装されており、複数の技術を使っているかもしれない。まだ未実装のものもある。これらの多くの技術はブロックチェーン上における様々な近似や仮定を破ることに注力しており、組み合わせて使うことでもっとも効果的になる。

=== アドレス再利用の忌避 ===

2回以上利用されたアドレスはプライバシーにとって非常に脅威になりうる。なぜなら、同じ所有者が関係していると証明される、2つの異なるトランザクションを紐付けることになるからである。もっともプライベートで安全なビットコインの利用方法は、支払いの度に新しいアドレスを提示することである。コインを受け取った後、同じアドレスは二度と利用すべきではない。ビットコインを送金する際には、取引相手に対して新しいアドレスを要求すべきである。全ての良いビットコインウォレットは、ユーザーインターフェースでアドレス再利用を忌避する仕組みになっている。

Eメールアドレスのように再利用できると思わせてしまうため、ビットコインアドレスという呼称はこの種のデータを表現するのにふさわしくないという議論がある。ビットコイン請求書のような呼び方の方が良いだろう。

ビットコインは匿名ではなく偽名であり、ここでの偽名とはビットコインのアドレスのことである。アドレス再利用を避けることは、偽名を使ったあと同じ偽名を二度と使わないようなものである。

Bitcoin Core 0.17ではアドレス再利用に関するプライバシーを向上させるアップデートが為された。<ref>https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.17.0.md#partial-spend-avoidance</ref>. アドレスが複数回支払いに利用された時、これらのアドレスからの支払いは複数回の支払いに別れるということがありうるが、これによって複数アドレスの関連付けが可能になりプライバシーが既存されてしまう。-avoidpartialspends というフラグの利用が可能になり(デフォルトではfalse)、もしもtrueに設定された場合、ウォレットは同じアドレスに支払われたUTXOを、手数料が高くなるとしても、いつでも同時に新しいトランザクションに利用する。誰かがコインを使用済みのアドレスに送信した場合、そのようなコインは後にコイン選択の候補に含まれることになる。

==== [[#Forced_address_reuse|強制アドレス再利用]]を避ける ====

強制アドレス再利用攻撃によるプライバシーの喪失を避ける最も単純な方法は、空アドレスや利用済みアドレスに着金したコインを消費しないことである。このような攻撃で送金される金額は普通非常に小さいものであり、攻撃に利用されたコインは失われることになる。

Dust-b-gone <ref>https://github.com/petertodd/dust-b-gone</ref> は強制アドレス再利用のコインを安全に消費するために作られた古いプロジェクトである。これは他のユーザーと協力して全てのUTXOに署名し、強制アドレス再利用のコインをマイナー手数料として消費させることを目的としている。このトランザクションは[[OP_CHECKSIG]] sighashフラグという珍しいトランザクション形式を使うので強制アドレス再利用攻撃をした攻撃者の解析からは明示的に外れることになるが、それ以上強制アドレス再利用攻撃によりプライバシーが悪化することはなくなる。


=== コインコントロール ===

いくつかのビットコインウォレットはコインコントロール機能を有しており、ユーザーはどのコインをインプットとしてトランザクションで消費するのかを選択することができる。コインコントロールはトランザクションの量・お釣りアドレス・トランザクショングラフ・共通インプット所有推定などによる情報漏洩を最小限に留めることを目的としている。<ref>https://medium.com/@octskyward/merge-avoidance-7f95a386692f</ref><ref>https://medium.com/@nopara73/coin-control-is-must-learn-if-you-care-about-your-privacy-in-bitcoin-33b9a5f224a2</ref>.

コインコントロールによってプライバシー情報の漏洩を防ぐ例：
ユーザーが給料としてビットコインを受け取っているが、ビットコインを現金で買うこともあるとする。ユーザーはチャリティーに寄付したいが、会社に知られたくない。チャリティーでは公開された寄付アドレスを利用しており、検索すると見つかってしまう。もしもユーザーがチャリティーへの寄付を、コインコントロール無しで行おうとすると、会社から支払われたコインをうっかり支払ってしまい、会社にチャリティーに募金したことがバレてしまうかもしれない。コインコントロールを利用することで、現金で匿名で入手したコインだけを利用してチャリティーに送ることができる。これによって会社側はユーザーがチャリティーを金銭的に支援していることを知ることができなくなる。

=== 複数トランザクション ===

複数のトランザクションで支払いを行うことで、量の関連付けや端数など、量に基づいたプライバシーへの攻撃を難しくすることができる。例えば、5BTCを誰かに支払いたいが、5BTCという値を簡単には検索されたくないとする。このときユーザーは2BTCと3BTCの別々のトランザクションで支払いを行うことができる。

プライバシー意識の高いプレイヤーやサービスは顧客に複数のビットコインアドレスを提供すべきである。

=== お釣りアドレスの忌避 ===

インプットとアウトプットを注意深く調整することで、お釣りアドレスの利用を避けることができる場合がある。お釣りアドレスを必要としないのはプライバシーにとって良いことである。

お釣りアドレスの忌避は、支払い元として大量のインプットと、支払先として大量のアウトプットが用意できる、巨大なトランザクションを扱うビットコインのサービスにおいて実用的である。このようなお釣りアドレスの忌避では、トランザクションサイズを削減することでマイナー手数料を下げることにもなる。

メイン記事: [[Techniques_to_reduce_transaction_fees#Change_avoidance|お釣りアドレスの忌避]]

お釣りアウトプットを作成するのを避けるもう1つの方法としては、支払いの量がそれほど重要ではなく、UTXO全体やUTXOの一部が完全に消費できるような場合である。例えば、[[Lightning Network]] においてペイメントチャネルを開設するような場合である。また別の例としては、コールドウォレットに送金するために全ての資産を移動させる場合にも、量は重要でないことになる。


=== スクリプトにおけるプライバシーの改善 ===

ビットコインアウトプットのスクリプトは、プライバシーに関連する情報を漏洩する。例えば、2018年後半において70%のビットコインアドレスは単一署名であり、30%はマルチシグであった。<ref>https://p2sh.info/</ref>. 異なるスクリプトの種類を見かけ上同一にすることでスクリプトのプライバシーを改善しようとする研究は多い。このような手法は、プライバシーの改善だけでなく、ストレージや帯域の要求値を下げることでスケーラビリティ上も効果がある。

'''ECDSA-2P'''は2-of-2マルチシグでありながら、ビットコインブロックチェーンに取り込まれた時には通常の単一[[Elliptic Curve Digital Signature Algorithm|ECDSA]]署名であるように見せることができる<ref>Scaling Bitcoin conference 2018 Tokyo. Conner Fromknecht (Lightning Labs)
Instantiating [Scriptless] 2P-ECDSA: Fungible 2-of-2 MultiSigs for Today's Bitcoin. https://www.youtube.com/watch?v=3mJURLD2XS8&t=3623 https://diyhpl.us/wiki/transcripts/scalingbitcoin/tokyo-2018/scriptless-ecdsa/</ref>.ビットコインはすでにECDSAを利用しているので、コンセンサスには変更が不要である。

'''[[Schnorr]]'''署名は現在のECDSA署名と比べて複数の利点がある署名方式である。<ref>https://medium.com/cryptoadvance/how-schnorr-signatures-may-improve-bitcoin-91655bcb4744</ref><ref>https://bitcoincore.org/en/2017/03/23/schnorr-signature-aggregation/</ref> 副作用としては、任意のN-of-N署名<ref>https://blockstream.com/2018/01/23/musig-key-aggregation-schnorr-signatures/</ref>とM-of-N マルチシグを、ブロックチェーン上で単一署名方式と見分けが付かないようにできることである。シュノア署名をビットコインに導入するにはソフトフォークによるコンセンサスの変更が必要である。2019年の時点で、署名形式の設計に関する提案がなされている。<ref>https://github.com/sipa/bips/blob/bip-schnorr/bip-schnorr.mediawiki</ref>.　ソフトフォークのコンセンサス変更自体は2019年初頭の時点で未だ設計段階である。

'''[[Scriptless scripts]]'''は、スクリプトの条件を明らかにすることなくスクリプトのロジックを再現することができる暗号学的プロトコルである。これによってブロックチェーン上から情報を削減しプライバシーとスケーラビリティを増加させる。<ref>https://bitcoinmagazine.com/articles/scriptless-scripts-how-bitcoin-can-support-smart-contracts-without-smart-contracts/</ref><ref>https://download.wpsoftware.net/bitcoin/wizardry/mw-slides/2017-03-mit-bitcoin-expo/slides.pdf</ref><ref>https://joinmarket.me/blog/blog/flipping-the-scriptless-script-on-schnorr/</ref><ref>https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001221.html</ref>. これは[[Lightning Network]] や [[CoinSwap]]のような[[Hash Time Locked Contracts|HTLC]]に関連するプロトコルを対象としている。

スクリプトレススクリプトでは、公開されるのはほとんど公開鍵と署名だけと言ってよい。複数パーティが関連する場合であっても、単一の公開鍵と単一の署名だけですむ。ライトニングネットワークのペイメントチャネルはエスクロー、アトミックスワップ、サイドチェーンフェデレーションと全く同一に見えることになる。2019年の時点で一般の人々がビットコイン上で行っていると考えられるほとんど全てのトランザクションは基本的に同一の形式に落とし込むことができる。<ref>http://diyhpl.us/wiki/transcripts/layer2-summit/2018/scriptless-scripts/</ref>.

'''MAST'''はマークル化抽象構文木のことであり、スクリプトのコントラクトのうち、実行されない部分の情報を隠すことができる。ビットコインブロックチェーン上で情報を削減することでプライバシーとスケーラビリティを改善できる。<ref>https://bitcointechtalk.com/what-is-a-bitcoin-merklized-abstract-syntax-tree-mast-33fdf2da5e2f</ref><ref>https://bitcoinmagazine.com/articles/the-next-step-to-improve-bitcoin-s-flexibility-scalability-and-privacy-is-called-mast-1476388597/</ref>.

'''Taproot'''はMASTとシュノア署名を組み合わせる方法である。<ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015614.html</ref>. シュノア署名はコインを消費するのに使われるが、ユーザーがMASTを使いたい場合にはそちらを公開することもできる。シュノア署名は N-of-Nでもどんなスクリプトレススクリプトのコントラクトでも良い。taprootを利用すると、[[Lightning Network]], [[CoinSwap]], [[multisignature|マルチシグ]]などの類似のスマートコントラクトは、全て普通の単一署名トランザクションと見分けが付かなくなる。

ほとんどの場合有用なスクリプトは、参加者全員の合意と署名を条件として、コントラクトが実行できるようなものになる。そのような場合、taprootは有用なものとなる。参加者が協力して署名しない場合にのみスクリプトが実行されればよいのである。

'''Graftroot'''はtaprootと似たスマートコントラクトである。これによってユーザーはtaprootよりもさらにスペースを節約しながら、スクリプト実行の条件を追加することが可能になる。欠点としては、ユーザー間での相互作用が必要とされることである。<ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-February/015700.html</ref><ref>https://www.reddit.com/r/Bitcoin/comments/7vcyip/graftroot_private_and_efficient_surrogate_scripts/</ref><ref>https://bitcoinmagazine.com/articles/graftroot-how-delegating-signatures-allows-near-infinite-spending-variations/</ref>.

=== ECDH アドレス ===

[[ECDH address|ECDHアドレス]]はアドレス再利用を防ぐことでプライバシーを改善する。例えば、ユーザーはECDHアドレスを寄付用のアドレスとして公開することができる。攻撃者はECDHアドレスを観測することができるが、それを消費するトランザクションを簡単に見つけることはできなくなる。

攻撃者が[[#Mystery_shopper_payment|覆面調査による支払い攻撃]]をして、寄付したビットコインがどこに向かったのかを共通インプット所有推定などで観測することで、寄付の金額や最終的な資金の到達先を観測できてしまうので万能のプライバシー解決策というわけではない。

ECDHアドレスは実用には問題がある。ECDHアドレスは相互作用が必要な[[Receiving_donations_with_bitcoin#Improving_privacy_by_avoiding_address_re-use|寄付したい人全員にビットコインのアドレスを公開するウェブサイト]]と似たようなものである。非相互作用型の寄付や、相互作用なしに単一の送付先に送金するような閉じたアプリケーションのようなものを除いて、ECDHが実際に有用であるかどうかは不明である。

=== 中央集権型ミキサー ===

これはトランザクショングラフを破る古典的な方法である。「タンブラー」「ウォッシャー」などとも呼ばれる。ユーザーはミキシングサービスにビットコインを送金し、サービスは手数料を差し引いて別のビットコインをユーザーに返却する。理論上は攻撃者はブロックチェーンを監視しても入金と出金トランザクションを関連付けることができない。

これにはいくつかの欠点がある。まずミキサーは入金と出金の関連付けを秘密にするということを信頼しなければならない。また、ミキサーがコインを盗まないということを信頼しなければならない。この盗難リスクが評判に基づいた市場を作ることになる。古くから確立されているミキシングサービスは良い評判が集まり、ミキシングサービスの運営に要する原価以上の手数料を徴収することが可能になる。また、評判を譲り渡すことができないので、このような中央集権型ミキサーのサービス市場は多くの出口詐欺で溢れている。

ミキサーと同等のプライバシー・カストディリスクを持つような方法として、より良い方法がある。ユーザーは単純に、ホットウォレットを管理しているウェブサイトに入金し、その後出金すればよい。ビットコインサービスがその他にユーザーの情報を必要としないのであれば、プライバシーとカストディリスクは中央集権型ミキサーと同等であり、さらにより安価になりうる。ビットコインカジノ、ポーカーのウェブサイト、投げ銭サービス、アルトコインの交換所、オンライン市場などがこのような目的で使うことができる。<ref>https://gist.github.com/chris-belcher/00255ecfe1bc4984fcf7c65e25aa8b4b#worked-example-for-tumbler-replacement</ref>.

このようなサービスがトランザクションの情報を知っているという問題については、いくつものサービスを経由することで緩和することができる。ブロックチェーンの受動的観測者による追跡を避けたいユーザーは、例えば最初にビットコインカジノにコインを送り、その後引き出して直接アルトコイン取引所に送金するなどを満足するプライバシーが得られるまで繰り返すことができる。


メイン記事: [[Mixing service|ミキシングサービス]]


=== CoinJoin ===

[[CoinJoin]]は特殊なビットコインのトランザクションであり、複数のパーティが協力して全員のインプットを寄せ集めた単一のトランザクションを作成する。これは共通インプット所有推定を壊すことができ、[[Coin_analogy#Fungibility|トランザクション内部におけるビットコインの本質的な代替可能性]]を利用している。このCoinJoinの技術はビットコインの最初期からかのうであり、その他のビットコイントランザクションをブロックするのと同じ方法でしかブロックできない。トランザクションを見るだけでは、コインジョインが行われているのかを確実に知ることはできない。コインジョインは非カストディ型であり、誰かのコインを盗むことができるような第三者の協力は必要としない。<ref>https://www.reddit.com/r/joinmarket/comments/3c7hnm/joinmarket_is_smart_contracts/</ref>.

==== 等量 CoinJoin ====

このトランザクションがコインジョインだとすると、2BTCと3BTCがもともと別のパーティによって所有されていたということになる。

 2 btc --> 3 btc
 3 btc     2 btc

このトランザクションは共通インプット所有推定を破ることになる。これらのインプットは同一人物によって所有されているわけではないが、それぞれのビットコインがどこに向かったのかを知ることは容易い。量を観測すれば、（両パーティが互いへの支払いを行っていないと仮定するのであれば）2BTCのインプットが2BTCのアウトプットに向かったことは疑いようがなく、3BTCの方も同様である。プライバシーを本当に改善するためには、等量のアウトプットをもったコインジョイントランザクションを作る必要がある。

 2 btc --> 2 btc
 3 btc     2 btc
           1 btc

このトランザクションでは等量の2つのアウトプット2BTCはインプットに紐付けることはできない。これらは両方のインプットから来たということができる。これはCoinJoinがプライバシーを改善するために使える核の要素であり、トランザクショングラフを破るというよりも混乱させるという方が近い。1BTCについてはプライバシーを得られたとは言えない。なぜなら、余剰の分を3BTCを紐付けるのは容易だからである。これらのコインジョインにおけるプライバシーの獲得は、何回も繰り返して行うことで蓄積されることになる。

2018年終盤の時点で、コインジョインは非中央集権化されたビットコインのプライバシー手法としてただ1つ実稼働しているものである。おそらくコインジョインだと思われるビットコインのブロックチェーン上のトランザクションIDは<code>402d3e1df685d1fdf82f36b220079c1bf44db227df2d676625ebcbee3f6cb22a</code> と <code>85378815f6ee170aa8c26694ee2df42b99cff7fa9357f073c1192fff1f540238</code>.である。これらのコインジョインは2人以上のパーティが関わっているので、それぞれのユーザーも（意図的に協力しない限り）インプットとアウトプットの間の関係を知ることはできないということに注意せよ。


==== PayJoin ====

上のセクションで議論した、複数アウトプットで同一の数字を持つようなコインジョインはそれ自体簡単に見つけることができるものである。しかしながら、そのような同定は常に否認可能である。なぜなら、誰かが自分自身で完結する偽コインジョインを作成した可能性もあるからである。

P2EPとも呼ばれるPayJoin<ref>https://blockstream.com/2018/08/08/improving-privacy-using-pay-to-endpoint/</ref><ref>https://medium.com/@nopara73/pay-to-endpoint-56eb05d3cac6</ref><ref>https://gist.github.com/AdamISZ/4551b947789d3216bacfcb7af25e029e</ref> はCoinJoinの特別な場合であり、片方のパーティがもう片方のパーティに支払いをする。このトランザクションは同一量の複数アウトプットを明示的に持たず、等量コインジョインとしては観測されない。

 2 btc --> 3 btc
 5 btc     4 btc

これは支払いとお釣りの単純なトランザクションとして解釈できる（ここではどちらが支払いでどちらがお釣りかという議論はしない）。このトランザクションを解釈する別の方法としては、2BTCが売り手、5BTCが買い手によって所有されており、買い手が1BTCを売り手に支払ったようなケースも考えうる。どちらの解釈が正しいのか判別する確実な方法は存在しない。結果的に、このトランザクションは共通インプット所有推定を破りプライバシーを改善するコインジョイントランザクションということができるが、同時に他のビットコイントランザクションと判別できず、検出もできない。

もしもPayJoinトランザクションがそれなりにでも使われるようになれば、共通インプット所有推定は実際上完全に欠陥のある手法になりうる。これは検出不可能なので、今日実際に使われているのかどうかすら定かではない。トランザクション監視会社は基本的にこの近似手法に頼っているため、2019年時点ではPayJoinのアイデアは非常に人気がある。<ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-August/016340.html</ref>.

=== CoinSwap ===

[[CoinSwap]]は非カストディ型のプライバシー技術であり、アトミックスワップの技術に基づいている。<ref>https://joinmarket.me/blog/blog/coinswaps/</ref>. アリスとボブがコインスワップを行う場合、アリスがボブと等量のビットコインをスマートコントラクトを通じて詐欺が不可能な形でビットコインを交換するものとして解釈できる。

[[CoinSwap]]は送金者と受取人の間でやり取りされたビットコインのトランザクショングラフを破ることになる。ブロックチェーン上では2つのトランザクションは完全に分離されたトランザクションになる。

 アリスのアドレス ---> エスクローアドレス 1 ---> ボブのアドレス
 ボブのアドレス   ---> エスクローアドレス 2 ---> アリスのアドレス

アリスとボブは当然、アドレス再利用によるプライバシーの喪失を避けるためそれぞれ別の新しいアドレスを生成することになる。

ブロックチェーン上で他のトランザクションと区別がつかないコインスワップを行うことは可能である。これによって、ビットコインは検出されることなくブロックチェーン上のどこかへとテレポートすることになると言える。大規模なブロックチェーン解析をしている解析者は普通のトランザクションとコインスワップのトランザクションを確実に見分けることはできないので非コインスワップのトランザクションもこれによって恩恵を受ける。獲得できるプライバシーの大きさに比べると、ブロックスペースの消費量も少ない。

コインスワップは、関係するパーティの間で多くのやり取りを必要とするので、このようなシステムはDoS攻撃を避ける必要が生じ、複雑なものになる。さらに、接続性が確立されて、検閲が行われていないことも条件となる。すなわち、両方のパーティが常にビットコインネットワークに自由にアクセスできなければならない。もしもインターネットが何日か何週間かダウンした場合、中途半端な状態のコインスワップでは片方のパーティがもう片方のコインを盗むことが可能になってしまう。

=== CoinJoinXT ===

CoinJoinXTは[[CoinJoin]]<ref>https://joinmarket.me/blog/blog/coinjoinxt/</ref>.と密接に関係する非カストディ型のプライバシー技術である。「トランザクショングラフ提案」(PTG)と呼ばれる接続されたトランザクションのリストを複数パーティの間で作成することができるようになる。PTGにおいては所有者のビットコインがトランザクション間で送受信されるが、PTGの最終段階では元の所有者に返却される。このシステムはPTG承認の過程がアトミックになるように設定され、PTGは最終的にブロックチェーン上で全て承認されるか、1つも承認されないということになるので、関係者は誰もお互いのビットコインを盗むことができない。

PTGはトランザクショングラフを難読化するような、いかなるトランザクションのリストにもなることができる。PTGはビットコインの通常の経済活動を模倣するような自然なトランザクショングラフを作ることもでき、攻撃者はPTGがどこから始まってどこで終わったのかを観測することができないため、強力なプライバシーを獲得できる。

CoinJoin同様にCoinJoinXTはDoS攻撃耐性を獲得するのがたやすく、大量の相互作用ステップも必要としない。[[CoinSwap]]とは異なり接続性や検閲性に関する条件も不要であり、ビットコインが一時的に検閲されたとしても資産は安全である。しかし、CoinJoinXTでは獲得できるプライバシーに比較して、大きなブロックスペースを消費する。CoinJoinXTはまたトランザクション展性の修正も必要であり、全てのPTG内のトランザクションはSegWitでなければならない。2019年時点では40%程度のみがSegWitであり、ブロックチェーンの観測者はレガシーアドレスかどうかを判定することで、非PTGのトランザクション候補を絞り込むことができる。

=== TumbleBit ===

[[TumbleBit]]は非カストディ型のプライバシー技術であり、中央サーバーもインプットとアウトプットの紐付けができないのが特徴である。サーバーが電子署名の交換を手伝うような暗号学的構築を通じて行われる。このプロトコルはプライバシーやビットコインの支持者に人気がある。

ブロックチェーンの観測者の視点では、タンブルビットのトランザクションは、非常に多くのアウトプット（例えば800）を持ち、全てのアウトプットが等量であるような、2つのトランザクションとして観測される。


=== オフチェーントランザクション ===

オフチェーントランザクションはブロックチェーンの上位レイヤーでのビットコインの取引を可能にする技術全般を意味する。オフチェーンで行われるビットコイン支払いはネットワーク上の全てのノードに送信されることはなく、公開台帳に永遠に刻まれ保存されるということはない。これによってほとんどの攻撃者にとってアクセスできる情報が減るので、プライバシーが改善することになる。オフチェーントランザクションにおいては公開アドレス、アドレスクラスター、公開トランザクション、トランザクションの量などといった、オンチェーン上でのプライバシー関連攻撃に使われるような性質が存在しない。

メイン記事: [[Off-Chain Transactions|オフチェーントランザクション]]

'''[[Lightning Network]]'''はビットコインのプライバシーの中でも特に重要なトピックなので[[#Lightning_Network|個別のセクションで解説されている]]。

==== ブラインド輸送証明書 ====

これはブラインド署名に基づいてオフチェーントランザクションを実行する別の方法である。このようなシステムを通じた支払いは非常に強力なプライバシーを持つ。1983年から知られている技術である。このシステムはカストディ型であり、中央サーバーは全ての資金を盗む単一障害点になりうる。しかし、この基本概念はライトニングネットワークが利用できない場面など特定の状況下では有用である。例えば、ブラインド輸送証明書は受信者がオフラインであるような支払いも可能である。

メイン記事: [[Blinded bearer certificates|ブラインド輸送証明書]]

==== サイドチェーン ====

[[Sidechain|サイドチェーン]]はビットコインを通貨単位とした別のブロックチェーンを言う。ビットコインはメインチェーンからサイドチェーンに移動することができ、そこで異なったコンセンサスルールに従うことになる。サイドチェーンは普通のビットコインブロックチェーンとは異なる、強力なプライバシーを提供できる場合がある。

メイン記事: [[Sidechain|サイドチェーン]]

=== 秘匿トランザクション ===

[[Confidential transactions|秘匿トランザクション]](CT)はトランザクション中の量を暗号化し秘匿する暗号学的プロトコルである。この暗号化はトランザクション中でビットコインの総量が増減していないことを、トランザクション中のビットコインの量を明かさずに検証できるという点で特別である。秘匿トランザクションをビットコインへ導入するためにはソフトフォークが必要であるが、サイドチェーンに実装することもできる。

メイン記事: [[Confidential transactions|秘匿トランザクション]]

=== 議論 ===

==== プライバシー vs スケーラビリティ ====

以上で述べたプライバシー技術は、プライバシー関連情報を秘匿するためにビットコインブロックチェーン上に新しい余剰なデータを追加することによって動作する。これは、より多くのデータがシステムによって処理されることでビットコインのスケーラビリティを悪化させることになる。さらに、これによってフルノードの運用コストが上昇することで、ユーザーにとって履歴と残高を取得する方法のうち最も強力なプライバシーを持つフルノードを運用しにくくなり、さらにプライバシーを悪化させるということがありうる。データをブロックに追加することはさらに[[Full_node#Economic_strength|システムのセキュリティを悪化させ]]、強力なプライバシーを持つビットコインを持っていてもビットコイン自体の安全性が低下するならば本末転倒である。ブロックスペースを利用するためのコストはユーザーにマイナー手数料として現れる。したがって、ブロックスペースを大量に消費するテクノロジーはユーザーが手数料が高すぎると判断すれば使われなくなるかもしれない。2017年後半の[[Miner_fees#The_market_for_block_space|ブロックスペース需要が急増した時期]]においては、少量のCoinJoinトランザクションはほとんど見られなくなった(少量のビットコイントランザクションも同様)。

オフチェーントランザクションはこのプライバシーとスケーラビリティのトレードオフを回避する１つの方法である。この種の解決策ではブロックチェーンに偽データを追加するのではなく、データをブロックチェーンから取り除くことによって機能する。お釣りアドレスの忌避とスクリプトのプライバシーもシステムへの負担を減らしながらプライバシーを改善することにつながる。[[CoinJoinXT]]、等量[[CoinJoin]]、[[TumbleBit]]はプライバシー獲得のために全て多くのブロックスペースを使用する。[[PayJoin]]では普通のトランザクションと同じで、追加でブロックスペースを消費することはないので、共通インプット所有推定を破る手法の中では相対的にスペース効率が良い。[[CoinSwap]]は得られるプライバシーと比較してブロックの使用量は非常に少なく、一度オフチェーンに出たあともう一度オンチェーンに戻ってくるようなオフチェーントランザクションの一種と捉えることもできる。[[Confidential transactions|秘匿トランザクション]]は多くのブロックスペース、帯域、CPUも消費するが、獲得できるプライバシーは非常に大きいのでこのトピックに関する結論はまだ不明である。

==== ステガノグラフィ ====

暗号学で用いられるステガノグラフィとは、何かが隠されている事自体を秘匿する行為である。暗号化されたメッセージを盗聴者が読むことはできないが、盗聴者は何か暗号化されたメッセージに隠されているということは分かる。ステガノグラフィ暗号化は、画像や音声データに暗号化されたメッセージを埋め込むことで、ノイズの中にメッセージを隠す手法である。

等量CoinJoinではコインの送金元と送金先が隠されているが、トランザクションの構造によって、何かが隠されているということは明らかである。したがってCoinJoinを利用することで共通インプット所有推定を壊すことができたとしても、等量CoinJoinが検出される（検出が不完全だとしても）という事実によって、攻撃者の追跡から除外されてしまうということはありうる。もしくは、CoinJoinの検出可能性によって、疑われたり、追加で捜査をされるということもありうる。

ステガノグラフィを目的にするのは良いことである<ref>https://joinmarket.me/blog/blog/the-steganographic-principle/</ref>。普通のトランザクションと見分けが付かないような形で作られたプライバシー技術によるトランザクションはより多くのプライバシーを獲得できる。また、そのような技術を使っていないユーザーにとっても、そのようなトランザクションの中に候補として紛れ込むことができるのでプライバシーは改善する。スクリプトレススクリプトはプライバシー関連情報が電子署名の乱数の中に秘匿されるステガノグラフィを用いたプライバシー技術の一例である。[[PayJoin]]、[[CoinSwap]]、[[CoinJoinXT]]は普通のビットコイントランザクションと見分けがつかなくできるので、良いステガノグラフィを用いたプライバシー技術であると言える。等量コインジョインやタンブルビットはステガノグラフィではない。また、中央集権型ミキシングサービスが共通インプット所有推定による分析を破るために利用されているのをよく見るが、大量のビットコインを扱うカジノやアルトコイン取引所での入出金を繰り返す方が、ユーザーが単純にギャンブルをプレイするために入出金したという可能性を作り出す点において、より良いと考えられる。

== Lightning Network ==

ライトニングネットワークはペイメントチャネルに基づいたオフチェーントランザクション技術の一種である。ビットコインのオンチェーントランザクションとほとんど同じセキュリティモデルを取っている。ライトニングネットワークはビットコインにとって革命的と言ってもよい。オフチェーントランザクションについては上記を参照。

プライバシーを改善するだけでなく、ライトニングネットワークではトランザクションが非常に高速（普通は一瞬）であり、オンチェーントランザクションよりも安価である。ライトニングノードは双方向ペイメントチャネルを開設し、ライトニングトランザクションはノードからノードへと中継されていく。中間ノードを経由してトランザクションがルーティングされるため、出発点と終着点のノード同士は直接ペイメントチャネルを開設する必要がない。

ライトニングネットワークのトランザクションはオフチェーンで起こり、永久に公開されるブロックチェーンに保存されるトランザクションを全ノードに配信する必要はない。公開記録が存在しない以上、攻撃者は全てのトランザクションの公開記録を参照することはできない。代わりに、攻撃者は中継ノードを運用することで情報を抜き取ろうとするかもしれない。トランザクションインプット・アウトプットやアドレスがオンチェーン上と同様に機能するわけではないので、共通インプット所有推定、アドレス再利用、お釣りアドレス検出、インプットアドレスからの資産推定、覆面調査による支払いなどのオンチェーン上の攻撃は根本的に機能しなくなる。

しかしながらライトニングネットワークは、ネットワークがペイメントチャネルの接続を張っていることで、別のプライバシー上の問題を引き起こすかもしれない。<ref>https://www.reddit.com/r/Bitcoin/comments/7t1q5x/deanonymization_risks_on_lightning_network/</ref>. 中継ノードになりうるルーティングノードは普通公開されており、そのネットワークの情報はルーティングされたパケットに関する送金額などの情報と重ね合わされる可能性もある。ライトニングのノードはまたTor経由でない限りIPアドレスを公開する必要があり、ペイメントチャネルは普通のブロックチェーン解析技術で攻撃されうるオンチェーントランザクションによって成り立っている。ペイメントチャネルはブロックチェーン上では2-of-2のマルチシグに見える。二者間での協力的なチャネルのクローズに使われるトランザクションは2-of-2アウトプットが消費されたようにブロックチェーン上では見えるが、非協力的なチャネルのクローズではトランザクションは複雑なHTLCスクリプトがブロックチェーン上に公開されることになる。


=== Onionルーティング ===

ライトニングプロトコルはonionルーティングを利用することで中継ノードに対するプライバシーを改善している。<ref>https://github.com/lightningnetwork/lightning-rfc/blob/master/04-onion-routing.md
</ref><ref>https://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/onion-routing-in-lightning/</ref> このプロトコルは前後1ホップ以外のノードのルーティング情報を、中継ノードが知ることができないようにしている。また、ルーティングの長さと中継ノードの位置を隠すことも目的にしている。

==== ネットワーク・トポロジー上でのonionルーティング ====

ライトニングネットワークのオニオンルーティングは普通のTorのオニオンルーティングと比較される。しかし、Torのネットワークではノード同士は完全グラフを構成する。すなわち、全てのtor上のノードは他の全てのノードと接続しており（または接続する能力があり）、オニオンルーティングによるパケットは他のどのノードにも中継可能である。これはライトニングネットワーク上では当てはまらない。ペイメントチャネルは普通全てのネットワークと接続しているわけではなく、中継ノードによるネットワーク・トポロジーは公開されている。ネットワーク・トポロジーとオニオンルーティングから得られた少しばかりの情報を使いデータを融合することで、ある状況下では、プライバシーを侵害することが可能になりうる。<ref>https://www.reddit.com/r/Bitcoin/comments/7rrjp3/is_onion_routing_appropriate_for_lightning_network/</ref><ref>https://www.reddit.com/r/Bitcoin/comments/8hwzbh/chainalysis_on_the_ln/</ref>.例えば、もしもライトニングノードのウォレットが単一のペイメントチャネルのみを持ち、単一の中間ノードのみと接続しているのであれば、ノードのウォレットからの全ての支払いと受取はその中間ノードを経由することになり、中間者はオニオンルーティングがあるのにも関わらず多くの情報を得ることができる。

このトポロジーの問題に関する解決策は、トポロジー全体が公開されないことかもしれない。トランザクションをルーティングする意図のあるノード以外は公開される必要はない。プライベートなペイメントチャネルを作成し、公開しないということも可能である。

これはライトニングネットワークによって利用されるオニオンルーティングが無意味ということではなく、Torほどプライバシーが強力ではないということである。

==== ランデブールーティング ====

オニオンルーティングでは送金元が送金先のライトニングノードを知っている必要がある（チャネルUTXOなどの情報も必要である）。これは、ユーザーがユーザーが自身のペイメントチャネルのUTXOを公開することなしにはライトニングネットワークの支払いを受けられないということを意味する。解決策としてランデブールーティング<ref>https://github.com/lightningnetwork/lightning-rfc/wiki/Rendez-vous-mechanism-on-top-of-Sphinx</ref><ref>https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001498.html</ref>, あるいは秘匿目的地とも呼ばれるもの<ref>https://bitcoinops.org/en/newsletters/2018/11/20/</ref>がある。これはライトニングの支払いを送金元ノードから送金先ノードへ、どちらも自分自身のノードと情報を公開せずに行うものである。

良い比喩としては、オニオンルーティングはTorで接続しTorの終端ノードを経由して目的地に向かうものであり、ランデブールーティングではTorで接続してTorのhidden serviceを経由して目的地に接続するようなものである。

=== アトミックマルチパスペイメント ===

アトミックマルチパスペイメント(AMP)はライトニング上のプロトコルで、単一の支払いを複数のライトニングネットワークトランザクションに分割することを可能にするものである<ref>https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/000993.html</ref>。例えば、もしユーザーが2btcずつ入った5つのチャネルを持っているとしたら、AMPプロトコルを複数のライトニングネットワーク上の経路を使うことで、7btcの送金が単一の支払いで可能になる。プライバシーの面では、AMPでは中間ノードが7btcの全量を観測することができず、部分的な1btcや2btcの支払い(あるいは他の適当な組み合わせ)のみを観測することになる。これはプライバシー上の改善であり、中継された支払いはもはや支払い量を公開する必要がなく、下限のみが知られることになる。

=== 共通ハッシュロック値 ===

非AMPの支払いにおいては、ペイメントハッシュは中継ルート上の全てのノードにおいて同一である。もしも複数のノードが協力した場合、同一のペイメントハッシュを使って同一の送金に関与したことが知られてしまう。これは中継ルート上でのタイムスタンプを利用することでも可能になる。

明示的なHTLCの代わりにスクリプトレススクリプトを使うことで、この共通ハッシュロック値の問題を解決できる。ルート上のそれぞれのステップでコミットされたランダムな値に、さらにランダムな値を追加することが可能になり、この二重ブラインド化の結果として、ペイメントチャネルを経由したマルチホップの経路ではそれぞれの参加者は直接接続されていない限りにおいて、支払いが同一パス上に存在するということが識別不可能になる。<ref>L2 Summit Hosted by MIT DCI and Fidelity Labs, Boston 2018, Andrew Poelstra talk on Scriptless Scripts http://diyhpl.us/wiki/transcripts/layer2-summit/2018/scriptless-scripts/</ref>.

=== カストディウォレット ===

ライトニングを利用するウォレットの中にはカストディ型のウォレットも存在する。これは企業が運営するバックエンドサーバーに接続するフロントエンドだけを提供するものである。これはおんチェーンのビットコインエコシステムにおけるウェブウォレットと同様のものである。

このような状況では、ユーザーのライトニングネットワークのトランザクションは全て企業に筒抜けになり、オンチェーン上でのウェブウォレットと同様にプライバシーは全く存在しない。2019年の時点でZapやLightning Peachなどがこのモデルを採用している。PeachウォレットにはGUIに「プライバシーポリシーに同意する」チェックボックスがあり、プライバシーポリシーを見てみるとこのウォレットがプライバシーに関する全ての情報を監視していることが書かれている。言うまでもないが、プライバシーに気を配っているユーザーはこのようなライトニングウォレットを使ってはならず、非カストディ型のウォレットのみを利用すべきである <ref>最初の20分を見よ https://www.youtube.com/watch?v=H1yPkPXLDVc</ref>。

=== 秘匿スクリプトタイプ ===

シュノア署名、スクリプトレススクリプト、taproot、ECDSA-2Pなどのスクリプトの種類を秘匿する技術の進展によってライトニングネットワークのプライバシーは恩恵を受けることになる。ブロックチェーン上のペイメントチャネルのオンチェーントランザクションは普通の単一署名のブロックチェーン上のトランザクションと識別不可能になる。

=== チャネルの状態を開示するための調査 ===

チャネルの残高の状態は公開されておらず、ペイメントチャネルを構成する二者間でのみ知られている。これは強力なプライバシーであり、量とお釣りは完全に秘匿されている。このプライバシーを侵害する方法としては、攻撃者が調査のために、残高が分かるまでチャネル経由での支払いをし続ける手法がある。このような攻撃は可能であると証明されており、2019年の初頭の論文に説明されている。<ref>Jordi Herrera-Joancomartí, Guillermo Navarro-Arribas, Alejandro Ranchal-Pedrosa, Cristina Pérez-Solà, Joaquin Garcia-Alfaro (2019), "On the Difficulty of Hiding the Balance of Lightning Network Channels" IACR Cryptology ePrint Archive: https://eprint.iacr.org/2019/328</ref> これはライトニングの実装がどこまでエラーメッセージの中に情報を含むかに依存する。この攻撃では経路に手数料を支払うことが必要であるかと思われるが、実際には攻撃者は偽の請求書を送りつけることで、最終ノードのみがエラーメッセージを返し支払いを実行させないような方法も可能である。したがって、この攻撃における手数料は、攻撃のためのチャネルを開設し、閉鎖する分だけでよいことが分かる。

このような攻撃は単一の、あるいはグループ化されたノードの残高を公開させるためにも使うことができ、巨大なスケールで言えば、全チャネルの残高の状態を公開させる可能性もある。攻撃者がこの手続きをライトニングネットワーク全体の全てのペイメントチャネルに対して繰り返し頻繁に行う場合、チャネルの状態の変化を監視することで、支払いがネットワーク上でどのようにルーティングされるのかを観測することも可能である。この攻撃に対する対処法としては、ルーティングノードがエラーでなくともランダムに（例えば20回に1回）ルーティングエラーを返すという方法がある。これはライトニングネットワークのUXを損なうことはあまり無い一方で、攻撃者に対しては莫大なコストがかかることになる。

== 実在するプライバシー技術 ==

このセクションはプライバシーを最終目標として実装しているビットコイン関連のソフトウェアについて述べる。特に、ブロックチェーン上でのプライバシー漏洩を防ぐものである。

プライバシーはビットコインの他の側面と容易に分離できるものではない。プライバシーのためだけに完全に分離された技術を使うというのは理想的ではない。理想的なのは、いつの日かビットコインの全てのウォレットがプライバシー技術をウォレットに導入することである。しかし2018年の終盤では、多くのプライバシー技術の実装は分離されたソフトウェアとして存在する。

=== Lightning Network ===

2019年の初頭では、複数のライトニングネットワークの実装が存在する: [[LND]], [[c-lightning]], [[eclair]] などである。

ライトニングネットワークはビットコインのメインネットで稼働しており、多くの商人やプロジェクトが支払いを受け付けている。一般公衆に広く使われるまでにはなっていない。いつの日か、全てのビットコインのウォレットでライトニングネットワークでトランザクションを送受信することが可能になり、それによって一般人が日常的に使うトランザクションでもプライバシー上の改善が見られるようになることが期待されている。

ライトニングネットワークのウォレットは普通[[Deterministic wallet]]などの標準的なプライバシー技術を利用しており、アドレス再利用に対しても警告を出している。

Zap Wallet や Lightning PeachのようなLNのウォレットはカストディ型であり、ユーザーの行動を全て監視することができる中央集権型サーバーが背後に存在する。したがって、そのようなウォレットは避けなければならない。

=== 手動 CoinJoin ===

CoinJoinのトランザクションは[[Raw Transactions]]の機能を使うことで特別なウォレットを必要とせずに手動で作れる。coinjoinは形式にとらわれず作成することができるので、非常に柔軟性が高い。ビットコイン事業者の間でこのようなコインジョインを行うことが、現実的かもしれない。つまり、コインジョインによって共通インプット所有推定から事業者のウォレットが全て単一のクラスターに所属するかのように偽装が可能である。

=== JoinMarket ===

[[JoinMarket]]は流動性確保のために市場で手数料が支払われるCoinJoinの実装である。JoinMarketでは''流動性テイカー''というユーザーが存在する。このユーザーはいつでも好きなときに好きな量をCoinJoinすることができ、そのために少額の手数料を支払う。''流動性メイカー''は24時間オンラインで待機しており、CoinJoinが可能なテイカーが出現するのを待ち続けている。代わりにテイカーからの手数料をもらうことができる。このようなマーケットが存在するおかげで、JoinMarketのユーザーはいつでも好きなときに、流動性が許す限りにおいていくらでもCoinJoinを実行できる。

メイカーは手数料収入のために常時接続しており、CoinJoinは任意の量をいつでも実行可能である。[[JoinMarket]]は少額の手数料収入を見込むボットを動かすこともできる。このようなボットは流動性に貢献し、他のユーザーがCoinJoinをするのを助けることができるようになる。

プライバシーはこのようなCoinJoinを複数回繰り返すことで改善されるので、[[JoinMarket]]のプロジェクトではCoinJoinが自動的に、ランダムな時間間隔とランダムな量で繰り返し実行されるタンブラースクリプトを用意している。ビットコインはJoinMarketのHDウォレットに入金され、タンブラースクリプトが複数回のCoinJoinによって複数ヶ所のアドレスに送付する。このように複数ヶ所のアドレスを送付するのは量から関連付ける攻撃を防ぐために必要である。例えばユーザーが取引所にコインを預け入れたい場合、取引所の「新しいアドレスを生成」するボタンを繰り返し利用して複数のアドレスを用意してから送付することで、取引所がコインを内部で他の顧客の入金と混ぜ合わせることになり、ブロックチェーン上での量に基づいた追跡は困難になる。

JoinMarketは[[Bitcoin Core]]のフルノードと接続してウォレットの履歴を安全に取得することが可能である。Electrumのサーバーを使う選択肢もあるが、推奨されていない。Electrumのインターフェースをクライアントサイドブロックフィルターで置き換える案がある。

このソフトウェアはオープンソースプロジェクトであり、コミュニティも存在する。JoinMarketはLinuxやCLIに慣れていない人々にとってはインストールが難しい。いつの日か、これを簡略化することが期待されているが、ボランティアによって運営されており改善の道筋は立っていない。

メイン記事: [[JoinMarket]]

=== Wasabi Wallet ===

[[Wasabi Wallet]]はCoinJoinを実装したウォレットである。C#と.Net Coreで書かれている。パッケージにはTorが含まれており、サーバーとクライアントの間での通信は全てTorを経由することになる。したがって、IPアドレスは秘匿される。インストールして利用するのは簡単である。このウォレットはHDウォレットやアドレス再利用の防止機能などの標準的なプライバシー技術が使われており、強力なコインコントロール機能も実装されている。このウォレットはクライアントサイドブロックフィルターを利用しており、トランザクション履歴を安全に取得できる。

CoinJoinはユーザー間で流動性メイカーとなる中間者なしに行われている。2019年初頭では、CoinJoinは大体90分に一回程度起こっているようである。

ユーザーのウォレットはCoinJoinを提供するサーバーに接続する。ウォレットはシュノアブラインド署名（チャウミアンブラインド署名やブラインド輸送署名と似た暗号技術）を利用しているので、サーバーも、その他の誰もミックスされたインプットとアウトプットの関係性を知ることができない。サーバーはWasabiWalletを開発したzkSNACKsという会社によって運営されている。会社は2019年の時点で、CoinJoinごとに0.17%の手数料を徴収することで運営されている。

メイン記事: [[Wasabi Wallet]]


=== Samourai Wallet ===

Samourai Walletはプライバシー機能を搭載したモバイルウォレットである。Stowawayが[[PayJoin]]の実装になっている。StonewallはCoinJoinのように見えるが実際には偽のCoinJoinを一人で作る機能である。これらの偽CoinJoinは（理論上の）トランザクション監視会社による監視アルゴリズムに偽陽性を与えるものとされる。PayNymsはECDHアドレスのじっそうである。このウォレットはお釣りアドレスを偽装する機能もあり、お釣りアドレスが支払いアドレスと同じアドレス形式になる。これによってお釣りアドレスを検出することで成立するウォレット指紋も回避することができる。

しかし、Samourai Walletはユーザーの履歴と残高を自身のサーバーに送信していることが明らかになっている。このサーバーはユーザーのアドレスとトランザクションを知っており、ユーザーを監視することができる。したがって、 Samourai Wallet は攻撃者がブロックチェーンを分析できるが、 Samourai Wallet のサーバーにはアクセスできないという脅威モデルにおいてのみ安全であるといえる。

=== Liquid サイドチェーン ===

2018年の時点でLiquidサイドチェーンはCT（秘匿トランザクション）を実装しており、トランザクションの量を隠しながらビットコインを移動することができる。この製品はBlockstream社によって提供され、取引所やトレーダーを対象にしている。これによって高速で安全な移転が可能である。

Liquidはフェデレーション型のサイドチェーンであり、ユーザーはこれを利用するためには個人情報を明かさなければならない。セキュリティモデルは取引所にビットコインを保管しておくのに等しいと言える。なぜならば、取引所の管理権限が奪われた場合、サイドチェーン上のビットコインが全て盗まれる可能性があるからである。しかし、このセキュリティモデルの中では素晴らしいプライバシーを得ることができ、サイドチェーンそれ自体もトレーダーのように行動を他者から隠して出し抜かれたくない人に向けて運営されているものである。

== 事例研究 ==

プライバシーは多面的なトピックであり、理論上の事例を追うことでそれぞれの概念がどう関連しているのか分かりやすくなるはずである。

=== プライバシーの悪い例 - 取引所の先回り売買 ===

# あなたはトレーダーでありビットコイン取引所に口座を持っている。
# あなたはビットコインを預けて売却したい。
# あなたはビットコインをかつて同じ取引所で使った入金アドレスに送った。
# アドレス再利用によって、ブロックチェーン上で取引所にビットコインが送金されたことが公開されてしまった。
# 取引所は口座にビットコインを反映するのに3承認を要求しているが、その間に価格はあなたの投資行動に不利な方に動いてしまった。他のトレーダーがあなたの入金トランザクションに気づいたからである。
# あなたはビットコインを不利な価格で売却することになってしまった。
# これは取引所のウェブサイトの入出金画面で「新しいアドレスを生成」のボタンを押して新しいアドレスを使うことで回避できる。

教訓: アドレス再利用はプライバシーを毀損する。

=== プライバシーの悪い例 - アドレス再利用による貯蓄額の開示 ===

# あなたは単一アドレスのペーパーウォレットでビットコインを貯金しており、アドレスが再利用されている。
# 全てのビットコインの貯金は同じアドレスに貯められており、例えばその金額が1億円であるとする。
# あなたはビットコインを少し買って貯金に回し、ペーパーウォレットに入金した。
# あなたにビットコインを売った人物は、ブロックチェーンを追ってあなたのペーパーウォレットが1億円貯めていることを見つけた。
# 彼はそれをカフェやバーで他人に言いふらした。
# 噂が広まった。強盗があなたの家に押し入ってあなたを人質に取り、1億円を渡さないと開放しないと迫った。<ref>https://github.com/jlopp/physical-bitcoin-attacks</ref>.

教訓: アドレス再利用はプライバシーを毀損する。

=== プライバシーの悪い例 - データ収集による貯蓄額の開示 ===

# あなたはビットコインを貯金している。取引所には[[#Revealing_data_when_transacting_bitcoin|あなたのデータを全て開示している]]。
# あなたは普段ビットコインを買うだけだが、時々売ることもある。あなたはこの取引所だけしか使ったことがない。
# ブロックチェーン上のプライバシー技術を利用するかどうかに関わらず、この取引所はあなたの取引を全て知っており、あなたがビットコインをどれだけ持っているのかいつでも知ることができる。

=== 例 - 制裁の回避 ===

# あなたは他の国から国際的な経済制裁を受けている国に住んでいる。
# あなたはそのせいでオンライン新聞を買うことができない。
# あなたが新聞屋のウェブサイトにTorを利用して行くことで、相手はどこの国から来たIPアドレスなのかを知ることができなくなる。
# あなたはビットコインを現金で購入して、あなたのコンピュータ上のウォレットソフトウェアに送り、そのビットコインで新聞を買う。
# ビットコインのとアンザクションには地理的な情報が含まれないので、あなたの支払いは経済制裁を受けている国からのものとは判定されない。


=== 例 - 友人のオンラインポーカーのプレイヤーに実名を知らせず取引する ===

# あなたは金を賭けてオンラインで誰かとポーカーをしている。
# あなたは大きく勝った。あなたのもとに大金が転がり込み、相手は不機嫌だ。
# 掛け金はビットコインだった。あなたはコインを現金化したり取引所で売るか、直接他の商品やサービスの購入に当てた。
# 相手の不機嫌なポーカープレイヤーはあなたの実名を探すことができない。

この例では攻撃者が取引所（もし現金で取引するのでなければ）のAML/KYC履歴にアクセスできないという、弱い脅威モデルを使っている。また、攻撃者はあなたのISPではなく、ビットコインのアドレスをIPアドレスと容易に結びつけることができないものとする（フルノードではなく軽量ノードを使っている場合）。


=== 例 - 会社に知られずに寄付をする ===

# あなたは給与をビットコインで受け取っており、会社はあなたに給与をビットコインで支払っている。
# あなたは0.1BTCをチャリティーや政治団体にサポートとして送金したいが、会社には知られたくない。
# 0.3BTCをビットコインカジノ、アルトコイン取引所、または別の匿名でビットコインの入出金を可能にするサービスのウェブサイトに入金する。
# 寄付アドレスを引き出し先アドレスに設定し、0.1BTCを出金する。
# 残りの0.2BTCをあなたの自分のウォレットに出金する(アドレス再利用を避けるために新しいアドレスを使う)。

もしもあなたの会社がブロックチェーンを解析していれば、あなたが団体Xのサポーターではなくギャンブル好きな人だと思うはずである。ビットコインのカジノは誰にあなたが寄付するのかは気にしない。会社は量から関連付けることもできない。なぜなら彼らはあなたが0.3BTCを送金するのを見たが、団体に送金されたのは0.1BTCだけだからである。ここでのプライバシーはあなたのコインを預入時点で他のカジノの利用者のコインと混ぜ合わせることで成立する。

=== 例 - 誰にも知られないように寄付をする ===

# あなたはチャリティーまたは政治団体Xを誰にも知られないようにサポートしたい。
# Bitcoin Coreのようなフルノードと同等の機能を持つウォレットをダウンロードし、インストールする。
# 寄付と同じ金額のビットコインを現金で購入する(またはマイナー手数料とボラティリティを考慮して多めに買う)。コインをウォレットに送る。
# コインを団体に送金する。トランザクションは[[Tor]]を通じて送信されなければならない。

現金による取引の代わりに、オンラインで使える現金のような匿名のギフトカードを入手してそれをビットコインと交換しても良い。

ISPや攻撃者が軽量ノードの通信を覗き見て、ユーザーのビットコインアドレスを発見する可能性があるので、この脅威モデルにおいてはフルノードが要求される。トランザクションをTor上で配信することでISPやトランザクション監視企業があなたのトランザクション送信用IPアドレスを知ることを防いでいる。



=== 例 - 寄付をプライベートで受け取る ===

# あなたが寄付を受け付けたい団体は単一の寄付アドレスだけを持っている。誰でも寄付アドレスをブロックチェーンエクスプローラーに入力することで寄付の金額と詳細を知ることができる。
# あなたは寄付されたコインをインターネット上の誰にも知られることなく消費したい。
# 寄付アドレスはフルノードと同等な[[Armory]]のようなウォレットのアドレスである。
# 匿名でビットコインの入出金を許可しているウェブサイトにビットコインを入金する。トランザクションの配信はTorを通じて行う。
# 入金後、すぐに別のビットコインサービスのウェブサイトに向けて出金する。
# 量から関連付けられることを防ぐために、異なるトランザクションの量を使うことに注意する。
# タイミングからのトランザクション同士の関連付けを防ぐため、少し時間が立ってから動かす。
# これを自分のウォレットにコインを戻すまでに、様々なビットコインウェブサイトで繰り返す。<ref>https://gist.github.com/chris-belcher/00255ecfe1bc4984fcf7c65e25aa8b4b#worked-example-for-tumbler-replacement</ref> 

以下は1BTCの例である。それぞれの矢印->は新しい引き出しトランザクションである。

 ウォレット    カジノ1           あるとコイン取引所          カジノ2            先物取引所   	ウォレット
 1btc  ->  1addrA  1btc      ->  1addrB 0.1btc     ->  1addrE 0.1btc  ->  1addrG 0.4btc  ->  1addrH 0.25btc
                             ->  1addrC 0.2btc     ->  1addrF 0.9btc  ->  1addrF 0.6btc  ->  1addrI 0.25btc
                             ->  1addrD 0.7btc                                           ->  1addrJ 0.25btc
                                                                                         ->  1addrK 0.25btc

上記と同じように、フルノードのウォレットはあなたのウォレットの履歴を安全に利用することができ、Tor経由でのトランザクションの送信はあなたのIPアドレスを秘匿することにつながる。複数の金額を利用することで量から関連付ける攻撃を防ぎ、プライバシーを守ることができる。複数のビットコインウェブサイトを使うのは、単一のウェブサイトでは攻撃者がプライバシーを完全に既存してしまうことを避けられないからである。それぞれのウェブサイトでカストディリスクがあり、ビットコインが盗まれる危険性はあるが、この例ではビットコインの量は比較的少なく、リスクは受け入れられるものとする。


=== 例 - 貯金をプライベートに保管する ===

# あなたはビットコインを[[Bitcoin as an investment|価値の保存手段]]として使い、他の誰にもその価値について知られたくないし、ビットコインを持っているということすら知られたくないとする。
# ビットコインを何らかの方法で購入してフルノードに接続したJoinMarketウォレットに送金する。全てのソフトウェアはTorを利用している。
# JoinMarketのタンブラースクリプトを起動し、アドレス間の関連付けを阻止する目的で多くのCoinJoinトランザクションを作成する。
# コインを別の長期的な[[Storing bitcoins|ビットコインの保管]]用のウォレットに送金する。ウォレットは自分自身で運営する[[Electrum#Server_software|Electrum server]]のようにフルノードと同等なものを利用しなければならない。

JoinMarketのようなビットコインのプライバシー技術はトランザクションからプライバシー関連情報を隠すことはできるが、他の場所でプライバシーを強化することはできない。例えばもしあなたがビットコインをAML/KYC取引所などを通じて匿名ではない方法で買った場合、取引所はあなたがその時ビットコインを買ったという情報を記録することになる。

JoinMarketの利用は上述のビットコインサービスウェブサイトとは違い非カストディで行えるものである。したがって、カストディリスクが許容できないようなケースでは便利である（例えば、全財産の貯金を匿名化する場合）。全てのウォレットはこの例ではフルノードと接続しており、第三者があなたのアドレスを関連付けたり、あなたのIPアドレスを関連付けたりできないようになっている。このフルノードはTor上で稼働しており、あなたのISPやネットワークレベルでの攻撃者はあなたがビットコインのノードを稼働させていることを知ることはできない。



=== 例 - 複数の送金元からの入金が関連付けられるのを防ぐ ===

# もしもあなたが複数の支払いを同一のウォレットで受け取っている場合、共通インプット所有推定で関連付けることが可能になる。
# あなたは看護師として働いており、夜は副収入のためにストリッパーとして働いている。両方共会社はビットコインで給料を支払うが、あなたは支払いを関連付けられたくない。
# あなたは看護師としての給与をJoinMarketのとあるmixdepth(階層)に送金する。また、ストリッパーとしての給与を別のmixdepth(階層)に送金する。
# JoinMarketのタンブラースクリプトを稼働させ、それぞれの残高を関連付けることなく結合させる。

カストディリスクのある別のやり方としては、看護師としての給料をカジノなどのビットコインサービスウェブサイトに入金して、ストリッパーとしての給料を別の新しいアドレスに入金する。その後あなたは２つの入金を他のカジノ利用者の入金と結合させて出金させる。おそらくもっとも良い方法は、どちらかの、または両方の給与をライトニングネットワーク上で受け取ることである。


=== 例 - カジノの配当金を取引所に送るが、どちらにも送金先と送金元が見えないようにしたい ===

# あなたはビットコインカジノで10btcを獲得したので取引所に送りたいが、カジノにも取引所にも相手のことを知らせたくない（あなたの国ではオンラインカジノが禁止されている）。
# JoinMarketをインストールしてあなた自身のフルノードと接続する。
# カジノの配当金をJoinMarketのウォレットに5btc+2btc+3btcの3つに分けて送金する。これらは全て異なるmixdepth階層に送らなければならない。
# JoinMarketタンブラースクリプトを稼働させ、コインを取引所の3つの異なるアドレスに（例えば）1btc+2btc+7btcに分けて送金する。
# これでオンラインカジノも取引所も量による関連付けをすることができす、送金元も送金先もわからない。CoinJoinのトランザクションは共通インプット所有推定も無効化し、JoinMarket自体の機能によってアドレスの再利用も行われず、トランザクショングラフの作成も難しくなる<ref>https://www.reddit.com/r/joinmarket/comments/7614ea/how_to_properly_spend_tumbled_coins/</ref>。

=== プライバシーの悪い例 - ブロックエクスプローラーの使用 ===

# あなたはビットコインの支払いをアドレスに受け取った。
# あなたはアドレスをコピペして[[Block chain browser|ブロックチェーンエクスプローラーのウェブサイト]]に入力して、入金トランザクションが3承認を得るまで「更新」ボタンを押し続けた。
# ブロックチェーンエクスプローラーのウェブサイトはこうしてあなたのIPアドレスが該当するビットコインアドレスにとても興味を持っているということを知ってしまった。
# あなたの自分のビットコインウォレット(フルノードに接続されたもの)を使うことで他の誰にも知られずに承認数と到着した日時を知ることができ、このような事態を避けることができる。

このプライバシーの毀損はブロックチェーンエクスプローラーにTor経由で接続することでほとんどの場合回避することができる。ただし、「誰か」がそのアドレスに興味を持っているということはわかってしまう。しかしIPアドレスは明かさずに済み、同じユーザーのコントロールする他のビットコインのアドレスは公開されない。

=== プライバシーの悪い例 - アルトコインミキシングが量の関連付けで失敗する例 ===

あなたは1.456225BTCを持っており、すでにあなたの個人情報がそこに紐付いている(AML/KYC取引所を通じて購入した場合など)。あなたは別のアドレスにビットコインを送金し、個人情報の紐付けを断ち切りたい。
# あなたはビットコインをアルトコインと交換する。そのアルトコインはブロックチェーン上のプライバシー技術が使われており、「プライバシーコイン」と呼ばれている。その後あなたはそのアルトコインで何回かトランザクションを作った後、ビットコインへ交換し直すとする。
# あなたはビットコインをウォレットに単一のトランザクションで送金した。
# トランザクションの量があなたの最初に持っていた1.456225BTCと近かったので、攻撃者はブロックチェーン全体を検索して２つの似た量のトランザクションを関連付けて、そのトランザクションがアルトコイン取引所に出入りしていることを特定した。

教訓: トランザクションの数量は全員に公開されているので、プライバシーのために注意深く取り扱う必要がある。

=== 例 - プライバシーアルトコインミキシング ===

# 上の例と同様に、あなたはミキシングしたいビットコインを持っている。あなたはプライバシーコインに出し入れすることでミキシングを実行しようとしている。
# ビットコインを買い戻す時、あなたはプライバシーアルトコインを取引所に入金して売却するが、あなたは複数のトランザクションを使って取引所や他のブロックチェーンの観測者が送金元と送金先のアドレスを、量の情報から関連付けできないようにする。

この方法はプライバシーアルトコインがビットコインの何百倍の単位で少ないトランザクションしか処理しておらず、トランザクションの集合が小さいことから失敗する可能性がある。また、取引所を利用するうえでカストディリスクがあるため、大量のコインの場合はこの方法は適切ではない可能性がある。プライバシーアルトコインは普通ビットコイン以上にスケーラビリティが弱いため、フルノードの利用はビットコインよりもコストがかかるかもしれない。プライバシーアルトコインはビットコインよりもボラティリティが高く、価格の変動によって一部の資産が失われる可能性が高まる。

=== 例 - ライトニングネットワークによる日常の決済 ===

# あなたはビットコインを持っており、一般的な商品やサービスに使いたいと思っている（例えばコーヒー、携帯電話クレジット、VPN、サーバー、ホテルや賃貸、飛行機、食べ物、飲み物、衣服など）。
# あなたはライトニングネットワークのウォレットをインストールしてそのような支払いを全て行う。
# 共通インプット所有推定、アドレス再利用、お釣りアドレス検出のようなプライバシーに対する攻撃はオフチェーントランザクションの技術に対しては無効である。

===  プライバシーの悪い例 - 固定化された寄付アドレスに注意せずに送金する ===

# あなたはビットコインを持っており、カストディウォレットに保管している。
# あなたは政治団体Xへ寄付をしたい
# あなたはカストディウォレットのウェブサイトで団体の寄付アドレスに送金するトランザクションを作成した。
# カストディウォレットサーバーはあなたが誰に送金しているのか見ることができる（そのグループが固定アドレスを使っているならなおさら簡単になる）。
# ウォレット事業者はあなたの思想を快く思わなかったため、ただちにあなたの口座を閉鎖した。

教訓: カストディウォレットはプライバシーの面で良くない。カストディはあなたがすること全てを監視できる。アドレスの再利用はプライバシー上良くない（寄付アドレスでは一般的なことであるが）。

=== プライバシーの悪い例 - 寄付を情報窃盗を目的とした覆面調査から受け取る ===

# あなたはビットコインの寄付を受け付けたいが、寄付された全額を公開しておきたくはない。
# あなたはウェブサーバーを設置して固有のアドレスを訪問者それぞれに見せる。
# 攻撃者はあなたの寄付総額を知りたいと考え、少額のビットコインをあなたに送金する。
# あなたは全ての寄付金を単一のトランザクションのインプットとして結合してしまい、共通インプット所有推定によってそれらのインプットを関連付けてしまう。
# 攻撃者はあなたの寄付金による収入がいくらなのか見積もることができてしまった。

教訓: 覆面調査からの支払いを利用した監視ははアドレスの再利用に気をつけている人に対しても有効である。共通インプット所有推定によって何が明らかにされるのか気を配っておくべきだ。

=== 実際の例 - 静的アドレスを利用したビットコイン窃盗マルウェア ===

# あなたはビットコインを被害者から盗むマルウェアを作成している。
# あなたはマルウェアが盗んだビットコインを送金するアドレスをハードコーディングした。
# マルウェア研究者はアドレスをブロックエクスプローラーに入力することで、あなたがどれだけのビットコインを盗んだのか見ることができてしまう。

これは様々な例で見られる: ワナクライ<ref>https://twitter.com/msuiche/status/863082346014224385</ref><ref>https://bitcointalk[dot]org/index.php?topic=1916199.0</ref>、Electrumのマルウェア<ref>https://www.reddit.com/r/Bitcoin/comments/anycg2/electrum_targeted_phishing_malware_warning/</ref><ref>https://twitter.com/GossiTheDog/status/1078308649158664194</ref>など。


=== プライバシーの悪い例 - ビットコイン窃盗マルウェアの覆面調査による支払いによる監視 ===

# あなたはビットコインを窃盗するマルウェアを研究している、情報セキュリティ研究者である。
# マルウェアの作者はECDHアドレスをマルウェアの中に埋め込んである。
# あなたのマルウェア解析ではビットコインのアドレスではなくECDH公開鍵だけしか分からず、マルウェアの作者は自分のプライバシーを十分に保護していると考えている。
# あなたはECDH公開鍵から作られたビットコインアドレスに覆面調査として少額のビットコインを送金した。
# マルウェアの作者はあなたの支払いも含め全ての盗まれたビットコインを、単一のトランザクションで、取引所に送金した。
# あなたはブロックチェーンを見て共通インプット所有推定を利用することでマルウェアによって盗まれたビットコインの総額も見積もることができた。
# また、あなたは取引所に連絡して窃盗犯の実世界の情報を教えてもらった。これで窃盗犯は刑務所に行くことになる。

教訓: 覆面調査による支払いと共通インプット所有推定を併用することで、アドレス再利用を避けている人でも非匿名化することが可能である。

=== 例 - 軽量ウォレットをTorから一度だけ使う ===

# あなたは匿名で何かを購入したり、寄付したいとする。
# あなたはElectrumウォレットをインストールし、Tor経由で使うように設定する。もしくはTails OSを使う。
# あなたはビットコインを匿名で現金で購入し、Electrumウォレットに送金する。
# あなたは全残高を使って購入や寄付に当てる。
# 終わった後、あなたはウォレットを削除し、二度と使わない。

あなたのElectrumウォレットはビットコインアドレスとトランザクションを見ることができる第三者のサーバーを使っている。あなたはTor経由でサーバーに接続しているので、サーバーはあなたの真のIPアドレスを知らない。あなたは単一のビットコインアドレスを使って再利用しないので、サーバーは他のアドレスと関連付けてクラスター化することができない。あなたは全残高を使い、情報を漏洩しうるお釣りアドレスを使っていない。この条件であれば、第三者のサーバーを使っているにも関わらず、プライバシーを守ることができる。

=== プライバシーの悪い例 - 軽量ウォレットをTor経由で何度も使う ===

上の例と似ているが、2つ以上のアドレスとトランザクションが使われる。

# あなたはビットコインを2つ以上の方法で使いたい。例えば、目新しい帽子とVPNを買いたいとする。
# あなたはElectrumウォレットをTorを使うように設定する。
# あなたは目新しい帽子の支払いをして、自分の住所に送ってもらう。
# あなたはネットサーフィンのプライバシーを高めるためにVPNを購入し、支払いをする。
# Electrumウォレットは第三者のElectrumサーバーに情報を送信するため、そのサーバーは２つのトランザクションを関連付けて、どのアドレスがお釣りアドレスなのかを知ることができる。
# それ故に、サーバーは同一人物が帽子とVPNを買ったということを知ることになる。帽子の購入には住所が必要だったので、あなたのVPNアカウントは住所と紐付いてしまうことになる。これでは匿名でのネットサーフィンはできそうにない。

教訓: 第三者の運営するElectrumのサーバーはあなたの２つのトランザクションを関連付けることができてしまった。自分のフルノードと接続した自分のElectrumサーバーを利用してこれを避けるべきである。

教訓2: [https://tails.boum.org TailsOS]で利用されるElectrumは2018年の時点でこのプライバシーモデルに基づいている。


=== 実際の例 - 公開寄付アドレスと共通インプット所有推定による紐付け ===

# [https://tails.boum.org/donate/ Tails OS の寄付ページ] のようなビットコインの寄付を受け付けているウェブサイトに行く。
# 寄付アドレス(この場合は <code>1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2</code>)をコピペしてwww.walletexplorer.comで検索する。
# サイトでは共通インプット所有推定とアドレス再利用、そしてあるいは他の技術によってアドレスをクラスタ化している。
# Tails OS project への寄附金額と件数を知ることができる。 https://www.walletexplorer.com/wallet/04d3d17f766c4e53?from_address=1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2 件数は正しいように見えるので、もっともらしく見える。


=== 実際の例 - MtGox取引所の調査を手助けした[[#Digital forensics|デジタルフォレンジック]] ===

Full talk: [https://www.youtube.com/watch?v=l70iRcSxqzo Breaking Bitcoin 2017 conference. Kim Nilsson - Cracking MtGox] [https://breaking-bitcoin.com/slides/CrackingMtGox.pdf Slides].

# [[Mt. Gox]]はかつて存在した取引所で、現在は倒産して閉鎖されている。
# 内部データベースは2014年3月にリークされ、ウォレットへのほぼ完全な入出金の記録が明らかになった。
# アドレス再利用が調査に貢献した大きな要因であった。共通インプット所有推定は、MtGoxの秘密鍵インポート機能のために調査にそこまで貢献しなかった。
# 分析情報はさらに、ウェブ検索で全てのフォーラム投稿と一致するかどうかチェックされた。例えば「助けてください! MtGoxに0.12345 BTCを入金しました。現在20承認がされていますがまだ取引所に反映されていません」などといった顧客の投稿である。フォーラム投稿は日時が記録されている。この情報だけでもブロックチェーン上で該当するトランザクションを検索するには十分である。
# 解析によってMtGoxでは複数回の盗難が起こっており、取引はその運営機関中ほとんど倒産状態であったことがわかった。


=== 実際の例 - 共通インプット所有推定の失敗による寄付収入の過大評価 ===

# ビットコインの寄付を受け付けている、ThePirateBayのようなウェブサイトに行く。
# 寄付アドレスを取得して(この場合 <code>1z8Tep4BNS79W3kYH8CHA8tWj6nuHYcCM</code>)、www.walletexplorer.comで検索する。
# このサイトは共通インプット所有推定とアドレス再利用、そしてあるいは他の技術を使ってアドレスをクラスター化している
# ThePirateBayに対する大部分の寄附金額と件数が分かる: https://www.walletexplorer.com/wallet/00005c945dba011c?from_address=1z8Tep4BNS79W3kYH8CHA8tWj6nuHYcCM
# この結果ではThePirateBayが何百億円も一日に寄付を受け取っているように見えるがそれは信じがたい。
# 考えられる説明としては、ThePirateBayが寄付をビットコイン取引所に直接受け取っているということであり、共通インプット所有推定が寄付収入を過大評価しているということである。実際には取引所全体への送金を評価していることになる。これはThePirateBayがカストディ型取引所を利用しているということであり、寄付を拒否されたり検閲されたりする危険性がある。
# 別の説明としては、ThePirateBayがCoinJoinを使っている可能性も考えられる。


=== 実際の例 - 共通インプット所有推定による誤ったクラスター化 ===

# www.walletexplorer.comは共通インプット所有推定とアドレス再利用、そしてあるいは他の技術を使ってアドレスをクラスター化している。
# [https://www.walletexplorer.com/wallet/MtGoxAndOthers MtGoxAndOthers]という巨大なクラスターには860万トランザクション、360万アドレスが2019年1月の時点で関連付けられている。
# かつて[[Mt. Gox]]ではユーザーがビットコインの秘密鍵を個人ウォレットからインポートできる機能を提供していた。<ref>https://twitter.com/LaurentMT/status/1078638385256902656</ref>.そこから、MtGox本体のウォレットのUTXOと併合されたと考えられる。
# また、いくつかのCoinJoinトランザクションがこのクラスターにたどり着いているように見える。<ref>https://www.reddit.com/r/Bitcoin/comments/2ww4eb/how_does_wallet_explorer_know_which_wallets/</ref>.
# 例えばトランザクション <code>5ac0210febf7ce07a737bae8c32f84c1c54d131c21a16ca6b02b6f1edcad15c3</code> はおそらくJoinMarketのトランザクションだが、MtGoxAndOthersクラスターに所属している。<ref>https://www.walletexplorer.com/txid/5ac0210febf7ce07a737bae8c32f84c1c54d131c21a16ca6b02b6f1edcad15c3</ref>.
# 別の例で言うと、このトランザクション<code>52757ed33a235ce8e48aeaabab7f6dd9cd3445c3642630123103b154ee59f3f5</code>は古いSharedCoinという中央集権型サービスで作られたものであり<ref>https://www.coinjoinsudoku.com/</ref>,これもまたwalletexplorerによればMtGoxAndOthersクラスターに所属していることになっている。

=== 実際の例 - 手動CoinJoinによるビットコインアナリストの誤誘導 ===

# CoinJoinの発明者であるGreg Maxwellは[https://bitcointalk.org/index.php?topic=139581.0 bitcointalkフォーラムに "I taint rich!" というスレッドを投稿した]。これは、CoinJoinのデモであり、共通インプット所有推定がいつも正しいわけではないということを示すためのものだった。
# 他のフォーラムメンバーがMaxWellの名前付きアドレスを使ってCoinJoinを手動で作った。これは、共通インプット所有推定の欠陥を示す強力な例となるはずだった。
# 何年もの後、40000BTCもの量があるビットコインのトランザクションが送信されて採掘され、[https://www.reddit.com/r/Bitcoin/comments/6tvwr5/someone_moved_40000_btc_is_it_from_silkroad/ ビットコインフォーラムで様々な推測を呼んだ]。この手動CoinJoinによって、ユーザーの一部はGreg Maxwellがこの40000BTCの所有者であるという誤った結論を導いた。

# ビットコインアナリストの意見の引用:
<blockquote>
''GMaxwellの名前付きアドレスによって元々所有されていたもののように見える: 14947302eab0608fb2650a05f13f6f30b27a0a314c41250000f77ed904475dbb''

''40kのトランザクションのアウトプットをクリックして元をたどると、関連するトランザクションが見えるはずだ。いくつかの少数のトランザクションの連鎖が。''

''40000BTCを持っていたアドレスだけでなく、同じトランザクション中で別のアドレスを所有していた誰かがその別のアドレスをアンロックすることができているということだ。つまり、誰かが少なくとも4年前の時点では両方を所有していたはずだ。''
</blockquote>

教訓: 共通インプット所有推定はいつでも正しいわけではない。


=== 実際の例 - QuadrigaCX 取引所のウォレット分析 ===

# 2019年初頭、QuadrigaCXという取引所が閉鎖され、顧客は（おそらく永遠に）預け入れたビットコインにアクセスすることができなくなった。
# QuadrigaCXのウォレットに関する情報を見つけるために、顧客はブロックチェーンの解析をしたがった。
# 彼らはインターネットフォーラムで、他の顧客に彼らの入金アドレスとトランザクションを公開するように呼びかけ、多くの顧客が応じた。
# www.walletexplorer.comを使うことで、分析者は全てのアドレスを含む巨大なウォレットクラスターを発見することができた。これは、おそらくQuadrigaCXのホットウォレットのものであると思われた。このホットウォレットは多くのトランザクションを行っていた。しばしば、アドレスの再利用をしており、CoinJoinをした形跡はなかった。したがって、この分析はおそらく正しい。
# walletexplorerのクラスターのうち、MtGoxAndOthersというクラスターが、分析者を惑わせて、QuadrigaCXがMtGoxと関係があるのではないかと疑いをかけられるに至った。しかし、実際にはこのクラスターはCoinJoinの結果生じただけだった。
# 分析者はコールドストレージウォレットを考えられる、大量のビットコインを含むような単一のクラスターを発見することはできなかった。しかし、コールドストレージは少数のトランザクションのみを作成し、アドレスの再利用は殆ど無いはずであるから、そのようなクラスターが共通インプット所有推定を利用しているwalletexplorer.com上で見つかることはそもそもありえないのかもしれない。また、取引所が破産状態にありコールドストレージウォレットが存在しないという可能性もあり得る。

メイン記事: https://blog.zerononcense.com/2019/02/04/quadrigacx-chain-analysis-report-pt-1-bitcoin-wallets/

Reddit のコメント: https://www.reddit.com/r/Bitcoin/comments/amut05/investigation_proves_an_exchange_quadriga_ran_a/

=== 実際の例 - Bustabitカジノの顧客がCoinbase.comから利用停止させられるのを防ぐ ===

# Coinbase.com はビットコインの取引所であり、Bustabitはビットコインを利用するオンラインカジノである。
# アメリカではオンラインカジノが違法である（しかし政府はしばしば自分で宝くじを発行したり、ラスベガスのような場所では現実世界の賭博を合法化している）。Coinbase.comは取引所のユーザーがカジノを使う場合警告を出し、最終的にはアカウントを凍結することで、この方針を適用している。
# Bustabitの顧客は警告を受け、Coinbase.comに凍結された。
# Bustabitは[[Techniques_to_reduce_transaction_fees#Change_avoidance|お釣りアドレスの使用忌避]]を実装した。<ref>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015606.html</ref> これによって多くの引き出しトランザクションはお釣りアドレスを持たなくなった。Bustabitはまた、何千もの再利用されたアドレスをJoinMarketにインポートして、CoinJoinトランザクションのインプットとして利用するようにした。
# これによってBustabitの顧客が警告を受けたり凍結されることはなくなった。
# お釣りアドレスの不使用とCoinJoinを両方使うことによって、共通インプット所有推定の仮定は成立しなくなり、お釣りアウトプットから漏洩するプライバシー関連情報も削減することになり、Coinbase.comのトランザクションを監視するパートナー企業はBustabitのウォレットアドレスをもはや特定できなくなったと考えられている。

=== 実際の例 - 珍しいマルチシグスクリプト ===

# 2019年1月の時点で、マルチシグのコントラクトはブロックチェーンの全ての観察者に対して可視化されている。
# これはm-of-nの値も含む。最も一般的なのは2-of-3マルチシグだということもわかっている。<ref>https://p2sh.info/dashboard/db/p2sh-repartition-by-type?orgId=1</ref>.
# 12-of-14 マルチシグのような不自然なスクリプトもブロックチェーン上で複数回確認されている。これらは資金を受け取ったユーザーが支払いに使った時点で簡単に見ることができるようになる。
# ビットコインの貯蔵を行う会社であるXapo社は3-of-5のマルチシグを使っている。彼らがコインを動かした時、3-of-5に入金されているコインの90%がブロックチェーン上で移動したことがわかった。これによって、Xapoのウォレットに含まれるビットコインの総量が明らかになった。<ref>https://www.youtube.com/watch?v=Tiyvrh53Yp8</ref>.
# 2016年にはBitfinexがハッキングされてウォレットが盗まれた。Bitfinexは保管のために2-of-3マルチシグを使っていた。攻撃者が普通のマルチシグでないアドレスに移動したことにより、2-of-3アドレスからの 120000 BTC の移動がブロックチェーン上で明らかになり、これによって窃盗の規模が明らかになった。<ref>https://www.youtube.com/watch?v=Tiyvrh53Yp8</ref>.

=== 実例 - フリーランスのIT契約社員が同僚に給与額を知られる ===

# redditのビットコインフォーラムの投稿によれば、<ref>https://web.archive.org/web/20170309231819/https://www.reddit.com/r/Bitcoin/comments/4v28jl/how_have_fungiblity_problems_affected_you_in/</ref> アドレスの再利用によって、彼の給与が同僚にバレてしまったらしい。
# ''フリーランスのITの契約社員として、現場のスペシャリストが私の日当を知ってしまうという事件があった。もちろん、彼は上司に自分の給与額が足りないと文句を言い出した。私のエージェントはこの事件の罰金として50%を月給から差し引くことになった。言うまでもないが、渡しは受取アドレスを請求書ごとに新しく作り直すようになったしし、日常の支出のためには別のアドレスセットを使うようになった。''

教訓: アドレス再利用はプライバシーを毀損する。

=== 実際の例 - ハッカーが445BTCの送金先をCoinJoinで秘匿 ===

# 2017年の5月、redditのユーザーがblockchain.infoのウェブウォレットに置いておいた445btcがなくなっており、盗まれたというスレッドを立てた。<ref>https://www.reddit.com/r/Bitcoin/comments/69duq9/50_bounty_for_anybody_recovering_445_btc_stolen/</ref>.
# ユーザーはこのビットコインを取り戻してくれた人に50%の賞金を約束した。
# 盗まれたコインはJoinMarketによってミキシングされていたことがわかった。ハッカーはJoinMarketの収益スクリプトの中にコインを置いておき、何回も繰り返しCoinJoinさせることにしていたようである。CoinJoinのピーリングチェーンが観測された。
# 公開台帳上での痕跡はこれによって完全に失われたことになる。

どうやってハッカーに盗まれないようにビットコインを保管するかについては、このwiki上の[[Storing bitcoins|ビットコインの保管]]の記事を参照せよ。

=== プライバシーの悪い例 - ビットコインで買い物をする際の、ブロックチェーンデータとwebクッキーのデータ融合 ===

# オンラインショッピングではいくつものプライバシー情報漏洩につながる可能性がある。例えばサードパーティ製追跡クッキー(例えばDoubleclick、Google Analytics、Facebook)や、意図的に商人に渡した名前、配送先住所、メールアドレスなどである。
# ビットコインのブロックチェーンはプライバシー関連情報を大量に漏洩しうる。
# この２つの情報を組み合わせることによるデータ融合においては、ビットコインをオンラインで利用している人々に関する多くの情報が明らかになる。2018年の「クッキーがブロックチェーンと出会う時」<ref>Goldfeder, S., Kalodner, H., Reisman, D., & Narayanan, A. (2018). When the cookie meets the blockchain: Privacy risks of web payments via cryptocurrencies, Proceedings on Privacy Enhancing Technologies, 2018(4), 179-199. doi: https://doi.org/10.1515/popets-2018-0038</ref>という論文のトピックである。
# 例えば、ビットコインのユーザーが奇抜な帽子を買って、それを自分の家に配送してもらった後、同じビットコインのアドレスを使ってWikileaksに寄付をすると、帽子商人とサードパーティの追跡者(ユーザーの実名とメールアドレスを知っている)は同じユーザーがWikileaksに寄付をしたことを見つけ出してしまう。

これは２つ以上のプライバシー情報漏洩がそれぞれの単体の情報漏洩に比べてはるかに多くの情報を持つようになる、データ融合の力を示す例である。

サードパーティ製ウェブ追跡クッキーのプライバシーの問題については10年近く議論されているが、状況はあまり良くなっていない。この状況に置いては、プライバシーは 1)uBlock Origin、Adblock Plus、Ghosteryのようなブラウザ拡張を使ってサードパーティ製追跡クッキーを拒否する　または 2) プライバシー関連情報が漏洩しにくいオフチェーントランザクションを使う またはその両方を実行することでプライバシーは回復できる。2019年で最も実用的なのはライトニングネットワークをオンラインショッピングで使うことである。


=== プライバシーの悪い例 - 中央集権型ミキサーが量からの関連付けで非匿名化される ===

# BitcoinFogは中央集権型のビットコインミキサーであり、1-3%の手数料をミキシングで徴収する。
# とあるredditのユーザーが共通インプット所有推定を使って簡単にBitcoinFogを非匿名化した。<ref>https://web.archive.org/web/20150607131623/http://www.reddit.com/r/DarkNetMarkets/comments/2rhaqc/deanonimyzing_bitcoinfog_and_other_tumblers/</ref>

=== プライバシーの悪い例 - トランザクション送信データであるIPアドレスとブロックチェーンデータのデータ融合 ===

Lesson: Private transaction broadcasting (for example over [[tor]]) is necessary for privacy.

# 2018年の論文<ref>Juhász PL, Stéger J, Kondor D, Vattay G (2018) A Bayesian approach to identify Bitcoin users. PLOS ONE 13(12): e0207000. https://doi.org/10.1371/journal.pone.0207000</ref> ではブロックチェーン解析とトランザクション送信の追跡を行ってビットコインユーザーの匿名化を行った。
# 研究者はアドレスの再利用と共通インプット所有推定を利用した(CoinJoinの可能性については言及がなかった)。
# 研究者は全てのbitcoinノードに接続し、送信されたトランザクションの追跡を試みた。これによって送信元のIPアドレスが明らかになった。
# この論文では22000人のビットコインユーザーをIPアドレスとアドレスから紐付けたとしている。 このうち20000人のユーザーでは人気のあるウェブウォレットから発信されていることが明らかになった。
# この論文では2013年後半以降から収集されたデータを利用しているが、Bitcoin Coreのトランザクション転送アルゴリズムは当時から大きく変わっており、プライバシーを改善するようになっている。したがって、ここで使われた手法は今日では精度は落ちるはずである。

教訓: Torなどを使った秘密の経路からのトランザクションの配信はプライバシーにとって必要不可欠である。

=== 実際の例 - ビットコインのランサムウェアに関連したトランザクションの分析に関する2018年の論文 ===

# 2018年の論文ではビットコインランサムウェアを研究するために追跡技術を使っている。<ref>D. Y. Huang et al., "Tracking Ransomware End-to-end," 2018 IEEE Symposium on Security and Privacy (SP), San Francisco, CA, 2018, pp. 618-631. doi: 10.1109/SP.2018.00047 https://www.youtube.com/watch?v=H5bPmzsVLF8</ref>.
# あるランサムウェアでは静的アドレス(すなわちアドレス再利用につながる)を使っているが、別のランサムウェアでは被害者にHTTPサーバーに接続させ、新しいビットコインのアドレスを取得させていた。
# ランサムウェアのアドレスを見つけるために、研究者はネット上で上がっている報告を見つけてランサムウェアの検体をリバースエンジニアリングし、内部にビットコインのアドレスが無いか調べた。
# 覆面調査による支払いを行い、0.001BTCをランサムウェアのアドレスに送ることでコインがどこに向かうのかを監視した。２つのランサムウェアの攻撃者(Cerber、Locky)は罠に引っかかったが、Sageは引っかからなかったので、このランサムウェアではクラスターを作成することができなかった。
# 研究者は共通インプット所有推定を用いてアドレスのクラスターを発見しようとした。CoinJoinがこの仮定を破ることに研究者は気づいていたので、クラスター内で検出可能なCoinJoinトランザクションについては、破られた点が分かるようにした。これはPayJoinの発明と実装の前の話だったので、全てのCoinJoinは検知されたと考えられる。
# 研究者はランサムウェアクラスターへの入金パターンと、そのランサムウェアのGoogle検索のパターンを調べ、マルウェア追跡サイトへマルウェアがアップロードされたパターンを調べた。もしもgoogle検索での突発的なパターンとバイナリのアップロード履歴が入金パターンの増加に繋がらなければ、そのランサムウェアのウォレットにおけるクラスター化には見落としがあると思われる。これはタイミング関連攻撃が使われたと言える。研究者はCryptoDefense、CryptoLocker、CryptoWallの殆どのクラスターを見落としているが、その他の全てのランサムウェアについてはおそらくクラスターを見つけることができたと結論づけた。
# トランザクション監視会社であるChainalysisによって、アドレスの所有者を見つける作業が行われた。これはChainalysisにデータを提供している取引所については完璧にうまく行った。これによって、ランサムウェアの資金は監視できることになった。知られている中で最大の目的地は、現在閉鎖されているがかつて犯罪者に広く使われていたとされるロシアのBTC-Eと呼ばれる本人確認のゆるい取引所であった。しかしながら、ほとんどすべての資金の行き先は不明であった。CryptoXXXについては95%が不明であり、WannaCryについては100%が行き先不明であった。研究者はそれが見つけることのできた最大の目的地だったという理由によりBTC-Eの名前を論文の概要と結論に書いたが、実際のところはほとんどのランサムウェアの資金について追跡することはできなかった。

この論文はトランザクション追跡の素晴らしい事例である。研究者は注意深く結論を出した。なぜなら、ブロックチェーン解析においては、簡単に自分が実際以上に物事を知っているという錯誤に陥ってしまうからである。ビットコインのプライバシーに興味がある全ての人にとって読む価値のあるものである。

ランサムウェアは脅威である。重要なデータはいつでもバックアップを取っておくべきである。

==関連項目==

* [[Common-input-ownership heuristic]]
* [[Address reuse]]
* [[CoinJoin]]
* [[PayJoin]]
* [[Transaction surveillance company]]
* [[Client-side block filtering]]
* [[Full node#Privacy]]
* [[Lightning Network]]

==参考==
<references />

[[Category:Privacy]]

